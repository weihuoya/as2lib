/** * TestMTASC Class * Tests the Debug class when using MTASC trace facility. * @version	1.0.0 (09.02.2006) */class TestMTASC{		private var test_obj:Object;	private var test_arr:Array;	private var loadText:LoadVars;			/**	 * Program entry point.	 */	public static function main():Void	{		var newTestMTASC:TestMTASC = new TestMTASC();	}			/**	 * Constructor.	 */	public function TestMTASC()	{		trace("<html>text</html>");		trace("ampersand: &amp;");		trace("quotation mark: &quot;");		trace("lt: &lt;");		trace("gt: &gt;");		trace("[%LV0%]copy: &copy;");		// Create some nonsense test object:		test_obj = new Object();		test_obj.props1 = new Object();		test_obj.props1.name = "Talia";		test_obj.props1.age = 27;		test_obj.props1.physic = "average";		test_obj.props2 = new Object();		test_obj.props2.name = "Ronny";		test_obj.props2.age = 32;		test_obj.props2.physic = "fit";				// Create a test Array:		test_arr = new Array();		test_arr = [["Sandrine", 19], ["Charlene", 28], ["Apnea", 26], ["Millie", 23], ["Sophie", 24], ["Kayla", 21]];				//largeText();		test();	}			/**	 * Test loop.	 */	private function test():Void	{		var ref:TestMTASC = this;				_root.onEnterFrame = function():Void		{			var rnd:Number = Math.floor(Math.random() * 100);			switch (rnd)			{				case 12:					trace("日本語テキストにほんごてきすと。");					break;				case 11:					trace("[%DLT%]");					break;				case 10:					trace(ref.test_arr, true);					break;				case 9:					trace(this);					break;				case 8:					trace(ref.test_obj, 0, true);					break;				case 7:					trace(Math.PI);					break;				case 6:					trace("_root.txt: " + _root.txt);					break;				case 5:					trace("This is usual output information without a given level.");					break;				case 4:					trace("A non-recoverable problem occured.", 4);					break;				case 3:					trace("An error occured!", 3);					break;				case 2:					trace("This is a warning message!", 2);					break;				case 1:					trace("A general bit of application information.", 1);					break;				case 0:					trace("This is a piece of debug information.", 0);					break;			}		};	}			/**	 * Handle larger text.	 */	private function largeText():Void	{		// Load in some longer text:		loadText = new LoadVars();		loadText.onData = function(txt:String):Void		{			trace(txt.split("\n").join(""));		};		loadText.load("Test.txt");	}	}