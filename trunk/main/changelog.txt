// :: CHANGELOG :: //


    :: 05/25/04 :: Martin Heidegger ::
       
      >> org.as2lib.util.StringUtil
   
        > added a lot of Documentation
        > added method addSpaceIndent()
        > added method multiply()

    :: 05/18/04 :: Martin Heidegger ::


        > Introduced org.as2lib.util.StopWatch class to stop time differences



    :: 05/26/04 :: Simon Wacker ::
  

      >> org.as2lib.env.reflect

        > removed CompositeMemberInfo.getName():String [is already defined in interface MemberInfo]
        > removed TypeInfo.getParent():PackageInfo [is already defined in interface CompositeMemberInfo]



    :: 05/28/04 :: Simon Wacker ::


      >> org.as2lib.env.reflect

        > renamed algorythm to algorithm
        > renamed algorithm.ClassAlgorythm to ClassAlgorithm
        > renamed algorithm.PackageAlgorythm to PackageAlgorithm
        > renamed algorithm.MethodAlgorythm to MethodAlgorithm
        > renamed algorithm.PropertyAlgorythm to PropertyAlgorithm
        > renamed algorithm.ChildrenAlgorythm to ChildrenAlgorithm
        > renamed algorithm.AbstractContentAlgorythm to AbstractContentAlgorithm
        > renamed algorithm.ContentAlgorythm to ContentAlgorithm
        > renamed algorithm.CacheAlgorythm to CacheAlgorithm
        + changed corresponding references from
          * org.as2lib.env.reflect.ReflectConfig

        > renamed ReflectConfig.get-/set*Algorythm to get-/set*Algorithm
        + changed corresponding references from
          * org.as2lib.env.reflect.ClassInfo
          * org.as2lib.env.reflect.PackageInfo
          * org.as2lib.env.util.ReflectUtil

        > renamed TypeInfo.getRepresentedType() to getType()
        > renamed ClassInfo.getRepresentedType() to getType()
        + changed corresponding references from
          * org.as2lib.env.out.Out
          * org.as2lib.env.reflect.SimpleCache
          * org.as2lib.env.reflect.algorithm.MethodAlgorithm
          * org.as2lib.env.reflect.algorithm.PropertyAlgorithm



    :: 05/30/04 :: Simon Wacker ::


      >> org.as2lib.util

        > removed Executable
        + changed corresponding references from
          * org.as2lib.util.Call

        > changed Call's constructor from Call(object, func:Function, args:Array) to Call(object, func:Function)
        > changed Call.execute() to execute(args:Array)

        > added ObjectUtil.forEach()



    :: 05/31/04 :: Simon Wacker ::


      >> org.as2lib.env.reflect

        > changed ClassInfo.newInstance() to newInstance(args:Array)


      >> org.as2lib.env.event

        > corrected overall documentation
        > changed field SimpleEventBroadcaster.listeners:ListenerArray to listeners:Array
        > changed operation EventBroadcaster.getAllListener():ListenerArray to getAllListener():Array
        + changed corresponding implementations in
          * org.as2lib.env.event.SimpleEventBroadcaster

        > changed constant SimpleEventBroadcaster.normalDispatcher to NORMAL_DISPATCHER
        > changed constant SimpleEventBroadcaster.logDispatcher to LOG_DISPATCHER
        > changed operation EventDispatcher.dispatch(event:EventInfo, listeners:ListenerArray) to dispatch(event:EventInfo, listeners:Array)
        + changed corresponding implementations in
          * org.as2lib.env.event.dispatcher.NormalEventDispatcher
          * org.as2lib.env.event.dispatcher.LogEventDispatcher

        > removed ListenerArray
        > renamed Consumeable to Consumable
        + changed corresponding references from
          * org.as2lib.env.event.dispatcher.NormalEventDispatcher
          * org.as2lib.env.event.dispatcher.LogEventDispatcher

        > renamed EventDispatcher.dispatchConsumeable() to dispatchConsumable()
        + changed corresponding implementations in
          * org.as2lib.env.event.dispatcher.NormalEventDispatcher
          * org.as2lib.env.event.dispatcher.LogEventDispatcher
        + and references from
          * org.as2lib.env.event.SimpleEventBroadcaster

        > added SpeedEventBroadcaster



    :: 06/03/04 :: Simon Wacker ::


      >> org.as2lib.env.event

        > changed throwed Throwable in DynamicEventBroadcasterFactory.createEventBroadcaster() from org.as2lib.env.except.UndefinedPropertyExceptiont to org.as2lib.env.except.IllegalStateException

      
      >> org.as2lib.env.except

        > removed UndefinedPropertyException


      >> org.as2lib.env.out.handler

        > added class SocketOutputServerHandler



    :: 06/05/04 :: Simon Wacker ::


      >> org.as2lib.env.except

        > fixed serious bug in SimpleStackTraceElement.getMethod() that broke the whole program if a Throwable was thrown by an operation of the superclass (the operation couldn't be found in the throwing subclass and a Throwable was thus being thrown)
        - it was actually no bug in the SimpleStackTraceElement but in the ClassInfo's.getMethods() operation


      >> org.as2lib.env.reflect

        > changed ClassInfo.getMethods() it now also returns the operations declared by the super type



    :: 06/06/04 :: Simon Wacker ::


      >> org.as2lib.env.out.info

        > added OutErrorInfo.toString()
        + changed the following OutHandlers to use this toString() operation
          * org.as2lib.env.out.handler.TraceHandler
          * org.as2lib.env.out.handler.SocketOutputServerHandler

        > added OutWriteInfo.toString()
        + changed the following OutHandlers to use this toString() operation
          * org.as2lib.env.out.handler.TraceHandler
          * org.as2lib.env.out.handler.SocketOutputServerHandler


      >> org.as2lib.env.except

        > added StackTraceElementFactory
        > added SimpleStackTraceElementFactory
        > added ExceptConfig.getStackTraceElementFactory()
        > added ExceptConfig.setStackTraceElementFactory()
        + changed AbstractException.addStackTraceElement() to use this newly created classes and operations



    :: 06/18/04 :: Simon Wacker ::

        > moved initialization of static vars into appropriate getter methods
          affected classes are
          * org.as2lib.env.reflect.ReflectConfig
          * org.as2lib.Config
          * org.as2lib.data.holder.HolderConfig
          * org.as2lib.env.except.ExceptConfig
          * org.as2lib.env.reflect.RootInfo



    :: 07/02/04 :: Simon Wacker ::

        > changed '!message' in org.as2lib.env.except.AbstractException.new() to '(message == undefined)' because passing a blank String resulted in a failure



    :: 07/11/04 :: Simon Wacker ::

        > added org.as2lib.util.StringUtil.endsWith()



    :: 07/12/04 :: Simon Wacker ::

        > changed org.as2lib.env.overload.Overload.matches() it returns true now if you check null against any type as expected