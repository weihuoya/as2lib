<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[TypedMap]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Map]]></name><uri><![CDATA[org_as2lib_data_holder_Map]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.data.holder.map.TypedMap]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Friday, 13 May 2005, 09:46:00]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>TypedMap</code> is a wrapper for <a href="org_as2lib_data_holder_Map.html">org.as2lib.data.holder.Map</a> instances that ensures that only
 values of a specific type are added to the wrapped map.]]></summary><restOfDescription><![CDATA[<p>This class simply delegates all method invocations to the wrapped map. If the
 specific method is responsible for adding values it first checks if the values
 to add are of the expected type. If they are the method invocation is forwarded,
 otherwise an <a href="org_as2lib_env_except_IllegalArgumentException.html">org.as2lib.env.except.IllegalArgumentException</a> is thrown.]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[TypedMap]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[map]]></private></item>
<item><private><![CDATA[type]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getType]]></item>
<item><![CDATA[containsKey]]></item>
<item><![CDATA[containsValue]]></item>
<item><![CDATA[getKeys]]></item>
<item><![CDATA[getValues]]></item>
<item><![CDATA[get]]></item>
<item><![CDATA[put]]></item>
<item><![CDATA[putAll]]></item>
<item><![CDATA[remove]]></item>
<item><![CDATA[clear]]></item>
<item><![CDATA[iterator]]></item>
<item><![CDATA[valueIterator]]></item>
<item><![CDATA[keyIterator]]></item>
<item><![CDATA[size]]></item>
<item><![CDATA[isEmpty]]></item>
<item><![CDATA[toString]]></item>
<item><private><![CDATA[validate]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[TypedMap]]></title><fullMethod><left><![CDATA[function <b>TypedMap</b> (

]]></left><right><param><name><![CDATA[type]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[map]]></name>:<type><![CDATA[<a href="org_as2lib_data_holder_Map.html">Map</a>]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>TypedMap</code> instance.<p>If the passed-in <code>map</code> does already contain values, these values do not
 get type-checked.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type]]></name><description><![CDATA[the type of the values this map is allowed to contain]]></description></param>
<param><name><![CDATA[map ]]></name><description><![CDATA[the map to type-check]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>type</code> is <code>null</code>
 or <code>undefined</code><br /><a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if <code>map</code> is <code>null</code> or
 <code>undefined</code>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[map]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>map</b>:<a href="org_as2lib_data_holder_Map.html">Map</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The wrapped map.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[type]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>type</b>:Function
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The type of values that can be added.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[clear]]></title><fullMethod><left><![CDATA[function <b>clear</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Clears all mappings.]]></text>
</description>
<fields>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#clear">org.as2lib.data.holder.Map.clear</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[containsKey]]></title><fullMethod><left><![CDATA[function <b>containsKey</b> (
]]></left><right><param><name><![CDATA[key]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>key</code> exists.<p>That means whether a value has been mapped to it.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[key]]></name><description><![CDATA[the key to be checked for availability]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the <code>key</code> exists else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#containsKey">org.as2lib.data.holder.Map.containsKey</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[containsValue]]></title><fullMethod><left><![CDATA[function <b>containsValue</b> (
]]></left><right><param><name><![CDATA[value]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>value</code> is mapped to a key.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[value]]></name><description><![CDATA[the value to be checked for availability]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the <code>value</code> is mapped to a key else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#containsValue">org.as2lib.data.holder.Map.containsValue</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[get]]></title><fullMethod><left><![CDATA[function <b>get</b> (
]]></left><right><param><name><![CDATA[key]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Returns the value that is mapped to the passed-in <code>key</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[key]]></name><description><![CDATA[the key to return the corresponding value for]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the value corresponding to the <code>key</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#get">org.as2lib.data.holder.Map.get</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getKeys]]></title><fullMethod><left><![CDATA[function <b>getKeys</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Returns an array that contains all keys that have a value mapped to it.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an array that contains all keys]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#getKeys">org.as2lib.data.holder.Map.getKeys</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getType]]></title><fullMethod><left><![CDATA[function <b>getType</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Function]]></right></fullMethod>
<description>
<text><![CDATA[Returns the type that all values in the wrapped map have.<p>This is the type passed-in on construction.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the type that all values in the wrapped map have]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getValues]]></title><fullMethod><left><![CDATA[function <b>getValues</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Returns an array that contains all values that are mapped to a key.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an array that contains all mapped values]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#getValues">org.as2lib.data.holder.Map.getValues</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isEmpty]]></title><fullMethod><left><![CDATA[function <b>isEmpty</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Returns whether this map contains any mappings.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this map contains no mappings else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#isEmpty">org.as2lib.data.holder.Map.isEmpty</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[iterator]]></title><fullMethod><left><![CDATA[function <b>iterator</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_data_holder_Iterator.html">Iterator</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an iterator to iterate over the values of this map.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an iterator to iterate over the values of this map]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_data_holder_map_TypedMap.html#valueIterator">valueIterator</a><br /><a href="org_as2lib_data_holder_map_TypedMap.html#getValues">getValues</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#iterator">org.as2lib.data.holder.Map.iterator</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[keyIterator]]></title><fullMethod><left><![CDATA[function <b>keyIterator</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_data_holder_Iterator.html">Iterator</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an iterator to iterate over the keys of this map.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an iterator to iterate over the keys of this map]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_data_holder_map_TypedMap.html#getKeys">getKeys</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#keyIterator">org.as2lib.data.holder.Map.keyIterator</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[put]]></title><fullMethod><left><![CDATA[function <b>put</b> (

]]></left><right><param><name><![CDATA[key]]></name></param>,
<param><name><![CDATA[value]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Maps the given <code>key</code> to the <code>value</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[key  ]]></name><description><![CDATA[the key used as identifier for the <code>value</code>]]></description></param>
<param><name><![CDATA[value]]></name><description><![CDATA[the value to map to the <code>key</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the value that was originally mapped to the <code>key</code>]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the type of the passed-in <code>value</code> is
 invalid]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#put">org.as2lib.data.holder.Map.put</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[putAll]]></title><fullMethod><left><![CDATA[function <b>putAll</b> (
]]></left><right><param><name><![CDATA[map]]></name>:<type><![CDATA[<a href="org_as2lib_data_holder_Map.html">Map</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Copies all mappings from the passed-in <code>map</code> to this map.<p>If one value in the given <code>map</code> is invalid, no key-value pair will be
 added.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[map]]></name><description><![CDATA[the mappings to add to this map]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the type of any value to put is invalid]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#putAll">org.as2lib.data.holder.Map.putAll</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[remove]]></title><fullMethod><left><![CDATA[function <b>remove</b> (
]]></left><right><param><name><![CDATA[key]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Removes the mapping from the specified <code>key</code> to the value.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[key]]></name><description><![CDATA[the key identifying the mapping to remove]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the value that was originally mapped to the <code>key</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#remove">org.as2lib.data.holder.Map.remove</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[size]]></title><fullMethod><left><![CDATA[function <b>size</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Number]]></right></fullMethod>
<description>
<text><![CDATA[Returns the amount of mappings.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the amount of mappings]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#size">org.as2lib.data.holder.Map.size</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[toString]]></title><fullMethod><left><![CDATA[function <b>toString</b> (
]]></left><right>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the string representation of the wrapped map.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the string representation of the wrapped map]]></description></field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_core_BasicClass.html#toString">org.as2lib.core.BasicClass.toString</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_core_BasicInterface.html#toString">org.as2lib.core.BasicInterface.toString</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[validate]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>validate</b> (
]]></left><right><param><name><![CDATA[value]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Validates the passed-in <code>value</code> based on its type.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[value]]></name><description><![CDATA[the value whose type to validate]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the type of the passed-in <code>value</code> is
 not valid]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[valueIterator]]></title><fullMethod><left><![CDATA[function <b>valueIterator</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_data_holder_Iterator.html">Iterator</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an iterator to iterate over the values of this map.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an iterator to iterate over the values of this map]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_data_holder_map_TypedMap.html#iterator">iterator</a><br /><a href="org_as2lib_data_holder_map_TypedMap.html#getValues">getValues</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Map.html#valueIterator">org.as2lib.data.holder.Map.valueIterator</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:26:30]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>