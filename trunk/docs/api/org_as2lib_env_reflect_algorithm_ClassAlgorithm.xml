<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[ClassAlgorithm]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.reflect.algorithm.ClassAlgorithm]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Monday, 23 May 2005, 11:20:30]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>ClassAlgorithm</code> searches for the class of a specific instance or class
 and returns information about that class.]]></summary><restOfDescription><![CDATA[<p>This class is rather cumbersome to use. It is recommended to use the static
 <a href="org_as2lib_env_reflect_ClassInfo.html#forObject">org.as2lib.env.reflect.ClassInfo.forObject</a>, <a href="org_as2lib_env_reflect_ClassInfo.html#forInstance">org.as2lib.env.reflect.ClassInfo.forInstance</a>, <a href="org_as2lib_env_reflect_ClassInfo.html#forClass">org.as2lib.env.reflect.ClassInfo.forClass</a>
 and <a href="org_as2lib_env_reflect_ClassInfo.html#forName">org.as2lib.env.reflect.ClassInfo.forName</a> methods instead. They offer more sophisticated
 return values and do also store <code>ClassInfo</code> instances retrieved by classes
 or instances and not only those by name like this algorithm does.<p>To obtain information corresponding to an instance or a class you can use
 this class as follows.<pre><span class="codeKeyword">var</span> myInstance:MyClass = <span class="codeKeyword">new</span> MyClass();
<span class="codeKeyword">var</span> classAlgorithm:ClassAlgorithm = <span class="codeKeyword">new</span> ClassAlgorithm();
<span class="codeKeyword">var</span> infoByInstance:<span class="codeIdentifier">Object</span> = classAlgorithm.execute(myInstance);
<span class="codeKeyword">var</span> infoByClass:<span class="codeIdentifier">Object</span> = classAlgorithm.execute(MyClass);</pre><p>It is also possible to retrieve a class info by name.<pre>classInfoByName:ClassInfo = classAlgorithm.executeByName(<span class="codeString">"MyClass"</span>);</pre><p>If the class is not contained in the root/default package you must specify
 the whole path / its namespace.<pre>classInfoByName:ClassInfo = classAlgorithm.executeByName(<span class="codeString">"org.as2lib.MyClass"</span>);</pre><p>Already retrieved class infos are stored in a cache. There thus exists only
 one <code>ClassInfo</code> instance per class. Note that the <a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#execute">execute</a> method
 does not return <code>ClassInfo</code> instances and does thus not store the found
 information.]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[ClassAlgorithm]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[c]]></private></item>
<item><private><![CDATA[r]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[setCache]]></item>
<item><![CDATA[getCache]]></item>
<item><![CDATA[execute]]></item>
<item><![CDATA[executeByClass]]></item>
<item><![CDATA[executeByInstance]]></item>
<item><![CDATA[executeByComparator]]></item>
<item><private><![CDATA[findAndStore]]></private></item>
<item><![CDATA[executeByName]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[ClassAlgorithm]]></title><fullMethod><left><![CDATA[function <b>ClassAlgorithm</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>ClassAlgorithm</code> instance.]]></text>
</description>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[c]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>c</b>:<a href="org_as2lib_env_reflect_Cache.html">Cache</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The cache to store class and package infos.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[r]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>r</b>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The temporary result.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[execute]]></title><fullMethod><left><![CDATA[function <b>execute</b> (
]]></left><right><param><name><![CDATA[d]]></name></param>)</right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#executeByClass">executeByClass</a> <code>(d:Function) : </code><br /><a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#executeByInstance">executeByInstance</a> <code>(d) : </code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[executeByClass]]></title><fullMethod><left><![CDATA[function <b>executeByClass</b> (
]]></left><right><param><name><![CDATA[d]]></name>:<type><![CDATA[Function]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Executes the search for the passed-in class <code>d</code> and returns information
 about this class.<p>The returned object has the following properties:
 <dl>
   <dt>clazz</dt>
   <dd>The class as <code>Function</code> that has been searched for, this is the
       passed-in class <code>d</code>.</dd>
   <dt>name</dt>
   <dd>The name as <code>String</code> of the searched for class.</dd>
   <dt>package</dt>
   <dd>The package represented by a <a href="org_as2lib_env_reflect_PackageInfo.html">org.as2lib.env.reflect.PackageInfo</a> instance the class is
       a member of.</dd>
 </dl><p><code>null</code> will be returned if:<ul><li>The passed-in class <code>d</code> is <code>null</code> or <code>undefined</code>.</li><li>The passed-in class <code>d</code> could not be found.</li></ul><p>The search starts on the package returned by the <a href="org_as2lib_env_reflect_Cache.html#getRoot">org.as2lib.env.reflect.Cache.getRoot</a> method
 of the set cache. If this method returns a package info whose <code>getPackage</code>
 method returns <code>null</code> or <code>undefined</code> <code>_global</code> is used instead.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[d]]></name><description><![CDATA[the class to return information about]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an object that contains information about the passed-in class <code>d</code>]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#getCache">getCache</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[executeByComparator]]></title><fullMethod><left><![CDATA[function <b>executeByComparator</b> (
]]></left><right><param><name><![CDATA[v]]></name>:<type><![CDATA[Function]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Executes the search for a class and returns information about that class.<p>The returned object has the following properties:
 <dl>
   <dt>clazz</dt>
   <dd>The class as <code>Function</code> that has been searched for.</dd>
   <dt>name</dt>
   <dd>The name as <code>String</code> of the searched for class.</dd>
   <dt>package</dt>
   <dd>The package represented by a {@ling PackageInfo} instance the class is
       a member of.</dd>
 </dl><p><code>null</code> will be returned if:<ul><li>The passed-in comparator <code>v</code> method is <code>null</code> or <code>undefined</code>.</li><li>The searched for class could not be found.</li></ul><p>The search starts on the package returned by the <a href="org_as2lib_env_reflect_Cache.html#getRoot">org.as2lib.env.reflect.Cache.getRoot</a> method
 of the set cache. If this method returns a package info whose <code>getPackage</code>
 method returns <code>null</code> or <code>undefined</code> <code>_global</code> is used instead.<p>The passed-in comparator is invoked for every found class to determine whether
 it is the right one or not. The comparator method gets passed the found class and
 must return <code>true</code> or <code>false</code>. If it returns <code>true</code> the
 algorithm stops and returns the information about this class.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[v]]></name><description><![CDATA[the comparator to determine the correct class]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an object that contains information about the class]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#getCache">getCache</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[executeByInstance]]></title><fullMethod><left><![CDATA[function <b>executeByInstance</b> (
]]></left><right><param><name><![CDATA[d]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Executes the search for the class the passed-in object <code>d</code> is an instance
 of and returns information about that class.<p>The returned object has the following properties:
 <dl>
   <dt>clazz</dt>
   <dd>The class as <code>Function</code> that has been searched for.</dd>
   <dt>name</dt>
   <dd>The name as <code>String</code> of the searched for class.</dd>
   <dt>package</dt>
   <dd>The package represented by a <a href="org_as2lib_env_reflect_PackageInfo.html">org.as2lib.env.reflect.PackageInfo</a> instance the class is
       a member of.</dd>
 </dl><p><code>null</code> will be returned if:<ul><li>The passed-in instance <code>d</code> is <code>null</code> or <code>undefined</code>.</li><li>The class of the passed-in instance could not be found.</li></ul><p>The search starts on the package returned by the <a href="org_as2lib_env_reflect_Cache.html#getRoot">org.as2lib.env.reflect.Cache.getRoot</a> method
 of the set cache. If this method returns a package info whose <code>getPackage</code>
 method returns <code>null</code> or <code>undefined</code> <code>_global</code> is used instead.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[d]]></name><description><![CDATA[the instance of the class to return information about]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an object that contains information about the class the passed-in object
 <code>d</code> is an instance of]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#getCache">getCache</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[executeByName]]></title><fullMethod><left><![CDATA[function <b>executeByName</b> (
]]></left><right><param><name><![CDATA[n]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[<a href="org_as2lib_env_reflect_ClassInfo.html">ClassInfo</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the class info representing the class corresponding to the passed-in
 class name <code>n</code>.<p>The class name must be fully qualified, that means it must consist of the
 class's path (namespace) as well as its name. For example 'org.as2lib.core.BasicClass'.<p>The search starts on the package returned by the <a href="org_as2lib_env_reflect_Cache.html#getRoot">org.as2lib.env.reflect.Cache.getRoot</a> method
 of the set cache. If this method returns a package info whose <code>getFullName</code>
 method returns <code>null</code> or <code>undefined</code> <code>"_global"</code> is used instead.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[n]]></name><description><![CDATA[the fully qualified name of the class]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the class info representing the class corresponding to the passed-in name]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in name is <code>null</code>, <code>undefined</code>
 or an empty string or if the object corresponding to the passed-in name is not of
 type function<br /><a href="org_as2lib_env_reflect_ClassNotFoundException.html">ClassNotFoundException</a> if a class with the passed-in name could not be found]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[findAndStore]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>findAndStore</b> (

]]></left><right><param><name><![CDATA[a]]></name>:<type><![CDATA[<a href="org_as2lib_env_reflect_PackageInfo.html">PackageInfo</a>]]></type></param>,
<param><name><![CDATA[v]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
</method>
<method>
<title><![CDATA[getCache]]></title><fullMethod><left><![CDATA[function <b>getCache</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_reflect_Cache.html">Cache</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the cache set via the <a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#setCache">setCache</a> method or the default cache that
 is returned by the <a href="org_as2lib_env_reflect_ReflectConfig.html#getCache">org.as2lib.env.reflect.ReflectConfig.getCache</a> method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the currently used cache]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setCache]]></title><fullMethod><left><![CDATA[function <b>setCache</b> (
]]></left><right><param><name><![CDATA[cache]]></name>:<type><![CDATA[<a href="org_as2lib_env_reflect_Cache.html">Cache</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the cache that is used by the <a href="org_as2lib_env_reflect_algorithm_ClassAlgorithm.html#executeByName">executeByName</a> method to look whether
 the class the shall be found is already stored.<p>This cache also determines where the search for a class starts.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[cache]]></name><description><![CDATA[the new cache]]></description></param>
</field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:28:08]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>