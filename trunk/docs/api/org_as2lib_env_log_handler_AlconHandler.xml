<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[AlconHandler]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[LogHandler]]></name><uri><![CDATA[org_as2lib_env_log_LogHandler]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.log.handler.AlconHandler]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Sunday, 10 April 2005, 10:34:10]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>AlconHandler</code> uses the <code>net.hiddenresource.util.alcon.Alcon</code> class
 from Sascha Balkau to log messages.]]></summary>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_AlconLogger.html">org.as2lib.env.log.logger.AlconLogger</a><br /><a href="http://hiddenresource.corewatch.net/index.php?itemid=17">Alcon</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[AlconHandler]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[alconHandler]]></private></item>
</methodSummaryPart>
</private>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[decorateMethod]]></private></item>
<item><private><![CDATA[recursiveTracing]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[getInstance]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[write]]></item>
<item><private><![CDATA[convertLevel]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[AlconHandler]]></title><fullMethod><left><![CDATA[function <b>AlconHandler</b> (

]]></left><right><param><name><![CDATA[decorateMethod]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[recursiveTracing]]></name>:<type><![CDATA[Boolean]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>AlconHandler</code> instance.<p>You can use one and the same instance for multiple loggers. So think about
 using the handler returned by the static <a href="org_as2lib_env_log_handler_AlconHandler.html#getInstance">getInstance</a> method. Using
 this instance prevents the instantiation of unnecessary alcon handlers and
 saves storage.<p><code>decorateMethod</code> is by default <code>true</code> and <code>recursiveTracing</code>
 <code>false</code>.<p>Note that <code>recursiveTracing</code> is turned off when <code>decorateMethod</code>
 is turned on.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[decorateMethod  ]]></name><description><![CDATA[(optional) determines whether to use the string returned
 by <code>LogMessage.toString</code> or only the original message returned by
 <code>LogMessage.getMessage</code> for logging]]></description></param>
<param><name><![CDATA[recursiveTracing]]></name><description><![CDATA[(optional) determines whether messages shall be traced
 recursively or not]]></description></param>
</field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[alconHandler]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>alconHandler</b>:<a href="org_as2lib_env_log_handler_AlconHandler.html">AlconHandler</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Holds a alcon handler.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[decorateMethod]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>decorateMethod</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Determines whether to decorate the message.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[recursiveTracing]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>recursiveTracing</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Determines whether to trace recursively or not.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[getInstance]]></title><fullMethod><left><![CDATA[static function <b>getInstance</b> (

]]></left><right><param><name><![CDATA[decorateMethod]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[recursiveTracing]]></name>:<type><![CDATA[Boolean]]></type></param>) : <![CDATA[<a href="org_as2lib_env_log_handler_AlconHandler.html">AlconHandler</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an instance of this class.<p>This method always returns the same instance.<p>Note that the two arguments <code>decorateMethod</code> and <code>recursiveTracing</code>
 are only recognized on first call of this method.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[decorateMethod  ]]></name><description><![CDATA[(optional) determines whether to use the string returned
 by <code>LogMessage.toString</code> or only the original message returned by
 <code>LogMessage.getMessage</code> for logging]]></description></param>
<param><name><![CDATA[recursiveTracing]]></name><description><![CDATA[(optional) determines whether messages shall be traced
 recursively or not]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[a alcon handler]]></description></field>
</fields>
</method>
</methodSection>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><private><![CDATA[convertLevel]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>convertLevel</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Number]]></right></fullMethod>
<description>
<text><![CDATA[Converts the As2lib <code>level</code> into the corresponding Alcon level number.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the As2lib level to convert]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the corresponding Alcon level number or <code>null</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[write]]></title><fullMethod><left><![CDATA[function <b>write</b> (
]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogMessage.html">LogMessage</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Uses the <code>AlconHandler</code> class to log the <code>message</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message to log]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_LogHandler.html#write">org.as2lib.env.log.LogHandler.write</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:27:12]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>