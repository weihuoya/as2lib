<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[StringUtil]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Martin Heidegger, Simon Wacker, Christophe Herreman, Flashforum.de Community]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.util.StringUtil]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Friday, 08 April 2005, 19:06:22]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>StringUtil</code> offers a lot of different methods to work with strings.]]></summary>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<private>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><private><![CDATA[StringUtil]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[replace]]></item>
<item><![CDATA[trim]]></item>
<item><![CDATA[leftTrim]]></item>
<item><![CDATA[rightTrim]]></item>
<item><![CDATA[leftTrimForChars]]></item>
<item><![CDATA[rightTrimForChars]]></item>
<item><![CDATA[leftTrimForChar]]></item>
<item><![CDATA[rightTrimForChar]]></item>
<item><![CDATA[checkEmail]]></item>
<item><![CDATA[assureLength]]></item>
<item><![CDATA[contains]]></item>
<item><![CDATA[startsWith]]></item>
<item><![CDATA[endsWith]]></item>
<item><![CDATA[addSpaceIndent]]></item>
<item><![CDATA[multiply]]></item>
<item><![CDATA[ucFirst]]></item>
<item><![CDATA[ucWords]]></item>
<item><![CDATA[firstChar]]></item>
<item><![CDATA[lastChar]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<private>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><private><![CDATA[StringUtil]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>StringUtil</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Private Constructor.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[addSpaceIndent]]></title><fullMethod><left><![CDATA[static function <b>addSpaceIndent</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[size]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Adds a space indent to the passed-in <code>string</code>.<p>This method is useful for different kind of ASCII output writing. It generates
 a dynamic size of space indents in front of every line inside a string.
 ################################################################################<p>Example:<pre><span class="codeKeyword">var</span> bigText = <span class="codeString">"My name is pretty important&#92;n"</span>
              + <span class="codeString">"because i am a interesting&#92;n"</span>
              + <span class="codeString">"small example for this&#92;n"</span>
              + <span class="codeString">"documentation."</span>;
<span class="codeKeyword">var</span> result = StringUtil.addSpaceIndent(bigText, <span class="codeNumber">3</span>);</pre><p>Contents of <code>result</code>:<pre>My name is pretty important
   because i am a interesting
   small example <span class="codeKeyword">for</span> <span class="codeIdentifier">this</span>
   documentation.</pre><p><code>indent</code> will be floored.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string that contains lines to indent]]></description></param>
<param><name><![CDATA[indent]]></name><description><![CDATA[the size of the indent]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the indented string]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the <code>size</code> is smaller than 0]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[assureLength]]></title><fullMethod><left><![CDATA[static function <b>assureLength</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[length]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Assures that the passed-in <code>string</code> is bigger or equal to the passed-in
 <code>length</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to validate]]></description></param>
<param><name><![CDATA[length]]></name><description><![CDATA[the length the <code>string</code> should have]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the length of <code>string</code> is bigger or equal to the
 expected length else <code>false</code>]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the expected length is less than 0]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[checkEmail]]></title><fullMethod><left><![CDATA[static function <b>checkEmail</b> (
]]></left><right><param><name><![CDATA[email]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Validates the passed-in <code>email</code> adress to a predefined email pattern.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[email]]></name><description><![CDATA[the email to check whether it is well-formatted]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the email matches the email pattern else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[contains]]></title><fullMethod><left><![CDATA[static function <b>contains</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[chars]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Evaluates if the passed-in <code>chars</code> are contained in the passed-in
 <code>string</code>.<p>This methods splits the <code>chars</code> and checks if any character is contained
 in the <code>string</code>.<p>Example:<pre><span class="codeIdentifier">trace</span>(StringUtil.contains(<span class="codeString">"monkey"</span>, <span class="codeString">"kzj0"</span>)); <span class="codeComment">// true</span>
<span class="codeIdentifier">trace</span>(StringUtil.contains(<span class="codeString">"monkey"</span>, <span class="codeString">"yek"</span>)); <span class="codeComment">// true</span>
<span class="codeIdentifier">trace</span>(StringUtil.contains(<span class="codeString">"monkey"</span>, <span class="codeString">"a"</span>)); <span class="codeComment">// false</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to check whether it contains any of the characters]]></description></param>
<param><name><![CDATA[chars ]]></name><description><![CDATA[the characters to look whether any of them is contained in the
 <code>string</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if one of the <code>chars</code> is contained in the <code>string</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[endsWith]]></title><fullMethod><left><![CDATA[static function <b>endsWith</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[searchString]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Tests whether the <code>string</code> ends with <code>searchString</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string      ]]></name><description><![CDATA[the string to check]]></description></param>
<param><name><![CDATA[searchString]]></name><description><![CDATA[the string that may be at the end of <code>string</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if <code>string</code> ends with <code>searchString</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[firstChar]]></title><fullMethod><left><![CDATA[static function <b>firstChar</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the first character of the passed-in <code>string</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to return the first character of]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the first character of the <code>string</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[lastChar]]></title><fullMethod><left><![CDATA[static function <b>lastChar</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the last character of the passed-in <code>string</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to return the last character of]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the last character of the <code>string</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[leftTrim]]></title><fullMethod><left><![CDATA[static function <b>leftTrim</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all empty characters at the beginning of a string.<p>Characters that are removed: spaces <code>" "</code>, line forwards <code>"&#92;n"</code> 
 and extended line forwarding <code>"\t&#92;n"</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[leftTrimForChar]]></title><fullMethod><left><![CDATA[static function <b>leftTrimForChar</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[char]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all characters at the beginning of the <code>string</code> that matches the
 <code>char</code>.<p>Example:<pre><span class="codeIdentifier">trace</span>(StringUtil.leftTrimForChar(<span class="codeString">"yyyymonkeyyyy"</span>, <span class="codeString">"y"</span>); <span class="codeComment">// monkeyyyy</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
<param><name><![CDATA[char  ]]></name><description><![CDATA[the character to remove]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if you try to remove more than one character]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[leftTrimForChars]]></title><fullMethod><left><![CDATA[static function <b>leftTrimForChars</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[chars]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all characters at the beginning of the <code>string</code> that match to the
 set of <code>chars</code>.<p>This method splits all <code>chars</code> and removes occurencies at the beginning.<p>Example:<pre><span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"ymoynkeym"</span>, <span class="codeString">"ym"</span>)); <span class="codeComment">// oynkeym</span>
<span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"monkey"</span>, <span class="codeString">"mo"</span>)); <span class="codeComment">// nkey</span>
<span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"monkey"</span>, <span class="codeString">"om"</span>)); <span class="codeComment">// nkey</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
<param><name><![CDATA[chars ]]></name><description><![CDATA[the characters to remove from the beginning of the <code>string</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[multiply]]></title><fullMethod><left><![CDATA[static function <b>multiply</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[factor]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Multiplies the passed-in <code>string</code> by the passed-in <code>factor</code> to create
 long string blocks.<p>Example:<pre><span class="codeIdentifier">trace</span>(<span class="codeString">"Result: "</span>+StringUtil.multiply(<span class="codeString">"&#62;"</span>, <span class="codeNumber">6</span>); <span class="codeComment">// Result: &#62;&#62;&#62;&#62;&#62;&#62;</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the source string to multiply]]></description></param>
<param><name><![CDATA[factor]]></name><description><![CDATA[the number of times to multiply the <code>string</code>
 @result the multiplied string]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[replace]]></title><fullMethod><left><![CDATA[static function <b>replace</b> (


]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[what]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[to]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Replaces all occurencies of the passed-in string <code>what</code> with the passed-in
 string <code>to</code> in the passed-in string <code>string</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to replace the content of]]></description></param>
<param><name><![CDATA[what  ]]></name><description><![CDATA[the string to search and replace in the passed-in <code>string</code>]]></description></param>
<param><name><![CDATA[to    ]]></name><description><![CDATA[the string to insert instead of the passed-in string <code>what</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the result in which all occurences of the <code>what</code> string are replaced
 by the <code>to</code> string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[rightTrim]]></title><fullMethod><left><![CDATA[static function <b>rightTrim</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all empty characters at the end of a string.<p>Characters that are removed: spaces <code>" "</code>, line forwards <code>"&#92;n"</code> 
 and extended line forwarding <code>"\t&#92;n"</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[rightTrimForChar]]></title><fullMethod><left><![CDATA[static function <b>rightTrimForChar</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[char]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all characters at the end of the <code>string</code> that matches the passed-in
 <code>char</code>.<p>Example:<pre><span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChar(<span class="codeString">"yyyymonkeyyyy"</span>, <span class="codeString">"y"</span>); <span class="codeComment">// yyyymonke</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
<param><name><![CDATA[char  ]]></name><description><![CDATA[the character to remove]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if you try to remove more than one character]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[rightTrimForChars]]></title><fullMethod><left><![CDATA[static function <b>rightTrimForChars</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[chars]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all characters at the end of the <code>string</code> that match to the set of
 <code>chars</code>.<p>This method splits all <code>chars</code> and removes occurencies at the end.<p>Example:<pre><span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"ymoynkeym"</span>, <span class="codeString">"ym"</span>)); <span class="codeComment">// ymoynke</span>
<span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"monkey***"</span>, <span class="codeString">"*y"</span>)); <span class="codeComment">// monke</span>
<span class="codeIdentifier">trace</span>(StringUtil.rightTrimForChars(<span class="codeString">"monke*y**"</span>, <span class="codeString">"*y"</span>)); <span class="codeComment">// monke</span></pre>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
<param><name><![CDATA[chars ]]></name><description><![CDATA[the characters to remove from the end of the <code>string</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[startsWith]]></title><fullMethod><left><![CDATA[static function <b>startsWith</b> (

]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[searchString]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Evaluates if the passed-in <code>stirng</code> starts with the <code>searchString</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string      ]]></name><description><![CDATA[the string to check]]></description></param>
<param><name><![CDATA[searchString]]></name><description><![CDATA[the search string that may be at the beginning of <code>string</code>]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if <code>string</code> starts with <code>searchString</code> else
 <code>false</code>.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[trim]]></title><fullMethod><left><![CDATA[static function <b>trim</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Removes all empty characters at the beginning and at the end of the passed-in 
 <code>string</code>.<p>Characters that are removed: spaces <code>" "</code>, line forwards <code>"&#92;n"</code> 
 and extended line forwarding <code>"\t&#92;n"</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string to trim]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the trimmed string]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[ucFirst]]></title><fullMethod><left><![CDATA[static function <b>ucFirst</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Capitalizes the first character of the passed-in <code>string</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string of which the first character shall be capitalized]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the passed-in <code>string</code> with the first character capitalized]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[ucWords]]></title><fullMethod><left><![CDATA[static function <b>ucWords</b> (
]]></left><right><param><name><![CDATA[string]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Capitalizes the first character of every word in the passed-in <code>string</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[string]]></name><description><![CDATA[the string of which the first character of every word shall be
 capitalized]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the <code>string</code> with the first character of every word capitalized]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:31:13]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>