<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[Process]]></title>
<classDocScript />
<classData>
<kindOfClass>
<![CDATA[Interface]]>
</kindOfClass>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Version]]></title><value><![CDATA[1.0]]></value></item>
<item><title><![CDATA[Author]]></title><value><![CDATA[Martin Heidegger]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.app.exec.Process]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Saturday, 28 May 2005, 12:06:42]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>Process</code> is a definition for all lacy processes like for loading files
 having serverside responses or algorithms that take a little longer.]]></summary><restOfDescription><![CDATA[<p>Any <code>Process</code> implementation can be started with <a href="org_as2lib_app_exec_Process.html#start">start</a>. Due
 to flash ist not possible to allow system processes it is build as Observable
 that responses if the process was
 started (<a href="org_as2lib_app_exec_ProcessListener.html#onStartProcess">ProcessListener.onStartProcess</a>),
 finished (<a href="org_as2lib_app_exec_ProcessListener.html#onFinishProcess">ProcessListener.onFinishProcess</a>),
 paused (<a href="org_as2lib_app_exec_ProcessListener.html#onPauseProcess">ProcessListener.onPauseProcess</a>),
 resumed (<a href="org_as2lib_app_exec_ProcessListener.html#onResumeProcess">ProcessListener.onResumeProcess</a>) or if the properties
 changed (<a href="org_as2lib_app_exec_ProcessListener.html#onUpdateProcess">ProcessListener.onUpdateProcess</a>).<p>To observe <code>Process</code> you can add one or more listener to the process
 with <a href="org_as2lib_app_exec_Process.html#addProcessListener">addProcessListener</a> or <a href="org_as2lib_app_exec_Process.html#addAllProcessListeners">addAllProcessListeners</a>.]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[start]]></item>
<item><![CDATA[addProcessListener]]></item>
<item><![CDATA[addAllProcessListeners]]></item>
<item><![CDATA[removeProcessListener]]></item>
<item><![CDATA[removeAllProcessListeners]]></item>
<item><![CDATA[getAllProcessListeners]]></item>
<item><![CDATA[hasStarted]]></item>
<item><![CDATA[hasFinished]]></item>
<item><![CDATA[isPaused]]></item>
<item><![CDATA[isRunning]]></item>
<item><![CDATA[getPercentage]]></item>
<item><![CDATA[setParentProcess]]></item>
<item><![CDATA[getParentProcess]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicInterface</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[addAllProcessListeners]]></title><fullMethod><left><![CDATA[function <b>addAllProcessListeners</b> (
]]></left><right><param><name><![CDATA[list]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds a <code>list</code> of <a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a>s as Observer to the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[list]]></name><description><![CDATA[List of listeners to be added.]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[addProcessListener]]></title><fullMethod><left><![CDATA[function <b>addProcessListener</b> (
]]></left><right><param><name><![CDATA[listener]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds a <a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a> as Observer to the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listener]]></name><description><![CDATA[<a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a> to be added.]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[getAllProcessListeners]]></title><fullMethod><left><![CDATA[function <b>getAllProcessListeners</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Getter for all added Observers.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[List that contains all registered listeners]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getParentProcess]]></title><fullMethod><left><![CDATA[function <b>getParentProcess</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_app_exec_Process.html">Process</a>]]></right></fullMethod>
<description>
<text><![CDATA[Getter for the parent process that executed the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Parent process if available, else null.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getPercentage]]></title><fullMethod><left><![CDATA[function <b>getPercentage</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Number]]></right></fullMethod>
<description>
<text><![CDATA[Getter for the currently executed percentage of the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Percentage of execution. Null if percentage was not evaluateable.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[hasFinished]]></title><fullMethod><left><![CDATA[function <b>hasFinished</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Flag if the process has been finished.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if the process has been finished else false]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[hasStarted]]></title><fullMethod><left><![CDATA[function <b>hasStarted</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Flag if the process has been started.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if the process has been started and isn't finish yet else false.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isPaused]]></title><fullMethod><left><![CDATA[function <b>isPaused</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Flag if the process has been paused.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if the process has been started and has been paused]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isRunning]]></title><fullMethod><left><![CDATA[function <b>isRunning</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Flag if the process has been paused.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if the process has been started and is not paused]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeAllProcessListeners]]></title><fullMethod><left><![CDATA[function <b>removeAllProcessListeners</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes all added Observers.]]></text>
</description>
</method>
<method>
<title><![CDATA[removeProcessListener]]></title><fullMethod><left><![CDATA[function <b>removeProcessListener</b> (
]]></left><right><param><name><![CDATA[listener]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes a <a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a> as Observer from the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listener]]></name><description><![CDATA[<a href="org_as2lib_app_exec_ProcessListener.html">ProcessListener</a> to be added.]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[setParentProcess]]></title><fullMethod><left><![CDATA[function <b>setParentProcess</b> (
]]></left><right><param><name><![CDATA[process]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Process.html">Process</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Possibility to tell the process what parent process started its execution.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[process]]></name><description><![CDATA[<code>Process</code> that started the current process.]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in
 		   process has the current process within the parent process list or
 		   if the passed-in process is the same process as the current
 		   process.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[start]]></title><fullMethod><left><![CDATA[function <b>start</b> (
]]></left><right>)</right></fullMethod>
<description>
<text><![CDATA[Starts the execution of the process.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Result for the start (implementation specific);]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:26:09]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>