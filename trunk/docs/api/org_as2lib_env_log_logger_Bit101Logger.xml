<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[Bit101Logger]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></item><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Logger]]></name><uri><![CDATA[org_as2lib_env_log_Logger]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.log.logger.Bit101Logger]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Thursday, 05 May 2005, 09:47:24]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>Bit101Logger</code> delegates all log messages to the <code>Debug.trace</code>
 method from Keith Peter's Debug Panel.]]></summary><restOfDescription><![CDATA[<p>Using this class instead of the <code>Debug</code> class in your application
 directly enables you to switch between almost every available Logging API
 without having to change the logging calls but just the underlying configuration
 on startup.]]></restOfDescription>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_handler_Bit101Handler.html">org.as2lib.env.log.handler.Bit101Handler</a><br /><a href="http://www.bit-101.com/DebugPanel">Flash Debug Panel Source</a><br /><a href="http://www.bit-101.com/blog/archives/000119.html">Flash Debug Panel Article</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[Bit101Logger]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[__proto__]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Class properties inherited from]]></text><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></title><item><link><name>ALL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ALL</method></link></item><item><link><name>DEBUG</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>DEBUG</method></link></item><item><link><name>ERROR</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ERROR</method></link></item><item><link><name>FATAL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>FATAL</method></link></item><item><link><name>INFO</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>INFO</method></link></item><item><link><name>NONE</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>NONE</method></link></item><item><link><name>WARNING</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>WARNING</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[level]]></private></item>
<item><private><![CDATA[levelAsNumber]]></private></item>
<item><private><![CDATA[traceObject]]></private></item>
<item><private><![CDATA[recursionDepth]]></private></item>
<item><private><![CDATA[indentation]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[setLevel]]></item>
<item><![CDATA[getLevel]]></item>
<item><![CDATA[isDebugEnabled]]></item>
<item><![CDATA[isInfoEnabled]]></item>
<item><![CDATA[isWarningEnabled]]></item>
<item><![CDATA[isErrorEnabled]]></item>
<item><![CDATA[isFatalEnabled]]></item>
<item><![CDATA[log]]></item>
<item><![CDATA[debug]]></item>
<item><![CDATA[info]]></item>
<item><![CDATA[warning]]></item>
<item><![CDATA[error]]></item>
<item><![CDATA[fatal]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[Bit101Logger]]></title><fullMethod><left><![CDATA[function <b>Bit101Logger</b> (


]]></left><right><param><name><![CDATA[traceObject]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[recursionDepth]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[indentation]]></name>:<type><![CDATA[Number]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>Bit101Logger</code> instance.<p>The default log level is <code>ALL</code>. This means all messages regardless of
 their level are logged.<p><code>traceObject</code> is by default <code>false</code>. Refer to the <code>Debug</code>
 class for information on the default <code>recursionDepth</code> and
 <code>indentation</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[traceObject   ]]></name><description><![CDATA[(optional) determines whether to trace objects recursively
 or to use the result of their <code>toString</code> method]]></description></param>
<param><name><![CDATA[recursionDepth]]></name><description><![CDATA[(optional) determines the count of recursions for
 recursively traced objects]]></description></param>
<param><name><![CDATA[indentation   ]]></name><description><![CDATA[(optional) determines the indentation number for recursively
 traced objects]]></description></param>
</field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_AbstractLogger.html#AbstractLogger">AbstractLogger.AbstractLogger</a>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[__proto__]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>__proto__</b>:Function = AbstractLogger
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Makes the static variables of the super-class accessible through this class.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[indentation]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>indentation</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The indentation number for recursively traced objects.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[level]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>level</b>:<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The set level.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[levelAsNumber]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>levelAsNumber</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The set level as number.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[recursionDepth]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>recursionDepth</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The number of recursions when tracing an object recursively.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[traceObject]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>traceObject</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Determines whether to trace objects recursively.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[debug]]></title><fullMethod><left><![CDATA[function <b>debug</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at debug level.<p>The <code>message</code> is only logged when the level is set to <code>DEBUG</code> or
 a level above.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html#isDebugEnabled">isDebugEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#debug">org.as2lib.env.log.Logger.debug</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[error]]></title><fullMethod><left><![CDATA[function <b>error</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> object at error level.<p>The <code>message</code> is only logged when the level is set to <code>ERROR</code> or a
 level above.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html#isErrorEnabled">isErrorEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#error">org.as2lib.env.log.Logger.error</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[fatal]]></title><fullMethod><left><![CDATA[function <b>fatal</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> object at fatal level.<p>The <code>message</code> is only logged when the level is set to <code>FATAL</code> or
 a level above.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html#isFatalEnabled">isFatalEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#fatal">org.as2lib.env.log.Logger.fatal</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getLevel]]></title><fullMethod><left><![CDATA[function <b>getLevel</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the set level.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the set level]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[info]]></title><fullMethod><left><![CDATA[function <b>info</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> object at info level.<p>The <code>message</code> is only logged when the level is set to <code>INFO</code> or
 a level above.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html#isInfoEnabled">isInfoEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#info">org.as2lib.env.log.Logger.info</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isDebugEnabled]]></title><fullMethod><left><![CDATA[function <b>isDebugEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for debug level messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if debug messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#DEBUG">org.as2lib.env.log.level.AbstractLogLevel.DEBUG</a><br /><a href="org_as2lib_env_log_logger_Bit101Logger.html#debug">debug</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isDebugEnabled">org.as2lib.env.log.Logger.isDebugEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isErrorEnabled]]></title><fullMethod><left><![CDATA[function <b>isErrorEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for error level messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if error messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#ERROR">org.as2lib.env.log.level.AbstractLogLevel.ERROR</a><br /><a href="org_as2lib_env_log_logger_Bit101Logger.html#error">error</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isErrorEnabled">org.as2lib.env.log.Logger.isErrorEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isFatalEnabled]]></title><fullMethod><left><![CDATA[function <b>isFatalEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for fatal level messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if fatal messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#FATAL">org.as2lib.env.log.level.AbstractLogLevel.FATAL</a><br /><a href="org_as2lib_env_log_logger_Bit101Logger.html#fatal">fatal</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isFatalEnabled">org.as2lib.env.log.Logger.isFatalEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isInfoEnabled]]></title><fullMethod><left><![CDATA[function <b>isInfoEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for info level messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if info messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#INFO">org.as2lib.env.log.level.AbstractLogLevel.INFO</a><br /><a href="org_as2lib_env_log_logger_Bit101Logger.html#info">info</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isInfoEnabled">org.as2lib.env.log.Logger.isInfoEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isWarningEnabled]]></title><fullMethod><left><![CDATA[function <b>isWarningEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for warning level messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if warning messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#WARNING">org.as2lib.env.log.level.AbstractLogLevel.WARNING</a><br /><a href="org_as2lib_env_log_logger_Bit101Logger.html#warning">warning</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isWarningEnabled">org.as2lib.env.log.Logger.isWarningEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[log]]></title><fullMethod><left><![CDATA[function <b>log</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the <code>message</code> using the <code>Debug.trace</code> method if
 <code>traceObject</code> is turned off or if the <code>message</code> is of type
 <code>"string"</code>, <code>"number"</code>, <code>"boolean"</code>, <code>"undefined"</code> or
 <code>"null"</code> and using the <code>Debug.traceObject</code> method if neither of the
 above cases holds <code>true</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message to log]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[setLevel]]></title><fullMethod><left><![CDATA[function <b>setLevel</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the log level.<p>The log level determines which messages are logged and which are not.<p>A level of value <code>null</code> or <code>undefined</code> is interpreted as level
 <code>ALL</code>, which is also the default level.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the new log level]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[warning]]></title><fullMethod><left><![CDATA[function <b>warning</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> object at warning level.<p>The <code>message</code> is only logged when the level is set to <code>WARNING</code>
 or a level above.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html#isWarningEnabled">isWarningEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#warning">org.as2lib.env.log.Logger.warning</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:27:29]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>