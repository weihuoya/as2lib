<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[TypeSafeEventListenerSource]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[EventListenerSource]]></name><uri><![CDATA[org_as2lib_env_event_EventListenerSource]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.event.TypeSafeEventListenerSource]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Tuesday, 19 April 2005, 18:20:34]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>TypeSafeEventListenerSource</code> manages listeners in a type-safe manner.]]></summary>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[TypeSafeEventListenerSource]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[t]]></private></item>
<item><private><![CDATA[l]]></private></item>
<item><private><![CDATA[c]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getListenerType]]></item>
<item><![CDATA[isListenerTypeChecked]]></item>
<item><![CDATA[addListener]]></item>
<item><![CDATA[addAllListeners]]></item>
<item><![CDATA[removeListener]]></item>
<item><![CDATA[removeAllListeners]]></item>
<item><![CDATA[getAllListeners]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[TypeSafeEventListenerSource]]></title><fullMethod><left><![CDATA[function <b>TypeSafeEventListenerSource</b> (

]]></left><right><param><name><![CDATA[listenerType]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[checkListenerType]]></name>:<type><![CDATA[Boolean]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>TypeSafeEventListenerSource</code> instance.<p><code>checkListenerType</code> is by default set to <code>true</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listenerType     ]]></name><description><![CDATA[the expected type of listeners]]></description></param>
<param><name><![CDATA[checkListenerType]]></name><description><![CDATA[determines whether to check that passed-in listeners
 are of the expected type]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>listenerType</code> is
 <code>null</code> or <code>undefined</code>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[c]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>c</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Determines whether to check for the correct listener type.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[l]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>l</b>:Array
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[All added listeners.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[t]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>t</b>:Function
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The expected listener type.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[addAllListeners]]></title><fullMethod><left><![CDATA[function <b>addAllListeners</b> (
]]></left><right><param><name><![CDATA[listeners]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds all listeners contained in the passed-in <code>listeners</code> array.<p>If the passed-in <code>listeners</code> array is <code>null</code> or <code>undefined</code>
 it will be ignored.<p>The individual listeners must be instances of the type specified on
 construction. If an individual listener is <code>null</code> or <code>undefined</code> it
 will be ignored.<p>All listeners that are of the correct type will be added.<p>Note that the listener type will not be checked if it was turned of on
 construction.<p>Note also that the order of the listeners contained in the passed-in
 <code>listeners</code> array is preserved.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listeners]]></name><description><![CDATA[the listeners to add]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if at least one listener in the passed-in
 <code>listeners</code> array is not of the expected type specified on construction]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_event_TypeSafeEventListenerSource.html#addListener">addListener</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventListenerSource.html#addAllListeners">EventListenerSource.addAllListeners</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[addListener]]></title><fullMethod><left><![CDATA[function <b>addListener</b> (
]]></left><right><param><name><![CDATA[listener]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds the passed-in <code>listener</code>.<p>The listener will only be added if it is not <code>null</code> nor <code>undefined</code>
 and if it is of the expected listener type specified on construction.<p>Note that if the passed-in <code>listener</code> has already been added the
 previously added one will be removed.<p>Note also that the listener type will not be checked if it was turned of on
 construction.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listener]]></name><description><![CDATA[the listener to add]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>listener</code> is not of the
 expected type specified on construction]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventListenerSource.html#addListener">EventListenerSource.addListener</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getAllListeners]]></title><fullMethod><left><![CDATA[function <b>getAllListeners</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Returns all added listeners that are of the type specified on construction.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[all added listeners]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventListenerSource.html#getAllListeners">EventListenerSource.getAllListeners</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getListenerType]]></title><fullMethod><left><![CDATA[function <b>getListenerType</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Function]]></right></fullMethod>
<description>
<text><![CDATA[Returns the expected listener type.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the expected listener type]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isListenerTypeChecked]]></title><fullMethod><left><![CDATA[function <b>isListenerTypeChecked</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Returns whether a listener's type is checked up on the expected listener type.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> a listener's type is checked else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeAllListeners]]></title><fullMethod><left><![CDATA[function <b>removeAllListeners</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes all added listeners.]]></text>
</description>
<fields>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventListenerSource.html#removeAllListeners">EventListenerSource.removeAllListeners</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeListener]]></title><fullMethod><left><![CDATA[function <b>removeListener</b> (
]]></left><right><param><name><![CDATA[listener]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes the passed-in <code>listener</code>.<p>The removal will be ignored if the passed-in <code>listener</code> is <code>null</code>
 or <code>undefined</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listener]]></name><description><![CDATA[the listener to remove]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventListenerSource.html#removeListener">EventListenerSource.removeListener</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:26:59]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>