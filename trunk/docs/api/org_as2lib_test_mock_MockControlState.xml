<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[MockControlState]]></title>
<classDocScript />
<classData>
<kindOfClass>
<![CDATA[Interface]]>
</kindOfClass>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.test.mock.MockControlState]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Sunday, 10 April 2005, 11:53:36]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>MockControlState</code> determines most of the actual behavior of the
 <a href="org_as2lib_test_mock_MockControl.html">MockControl</a> class.]]></summary><restOfDescription><![CDATA[<p>The actual behavior of the specific methods of this class depends largely on
 the implementing class. Thus refer to these implementation classes.]]></restOfDescription>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_mock_support_ReplayState.html">org.as2lib.test.mock.support.ReplayState</a><br /><a href="org_as2lib_test_mock_support_RecordState.html">org.as2lib.test.mock.support.RecordState</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[invokeMethod]]></item>
<item><![CDATA[setMethodResponse]]></item>
<item><![CDATA[setArgumentsMatcher]]></item>
<item><![CDATA[verify]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicInterface</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[invokeMethod]]></title><fullMethod><left><![CDATA[function <b>invokeMethod</b> (
]]></left><right><param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_test_mock_MethodCall.html">MethodCall</a>]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Is called when a method is called on the mock proxy.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[call]]></name><description><![CDATA[contains all information about the method call]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the return value of the method invocation in replay state]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[if the method is set up to throw a throwable in replay state]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setArgumentsMatcher]]></title><fullMethod><left><![CDATA[function <b>setArgumentsMatcher</b> (
]]></left><right><param><name><![CDATA[argumentsMatcher]]></name>:<type><![CDATA[<a href="org_as2lib_test_mock_ArgumentsMatcher.html">ArgumentsMatcher</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets a new arguments matcher.

 <dl>
   <dt>Record State</dt>
   <dd>Sets the arguments matcher that will be used for the last method specified
       by a method call.</dd>
   <dt>Replay State</dt>
   <dd>Throws an <code>IllegalStateException</code>.</dd>
 </dl>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[argumentsMatcher]]></name><description><![CDATA[the arguments matcher to use for the specific method]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> when in replay state]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setMethodResponse]]></title><fullMethod><left><![CDATA[function <b>setMethodResponse</b> (

]]></left><right><param><name><![CDATA[methodResponse]]></name>:<type><![CDATA[<a href="org_as2lib_test_mock_MethodResponse.html">MethodResponse</a>]]></type></param>,
<param><name><![CDATA[methodCallRange]]></name>:<type><![CDATA[<a href="org_as2lib_test_mock_MethodCallRange.html">MethodCallRange</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets a new method response.

 <dl>
   <dt>Record State</dt>
   <dd>Records that the mock object will expect the last method call the
       specified number of times, and will react by either returning the
       return value, throwing an exception or just doing nothing.</dd>
   <dt>Replay State</dt>
   <dd>Throws an <code>IllegalStateException</code>.</dd>
 </dl>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[methodResponse ]]></name><description><![CDATA[handles incoming requests appropriately]]></description></param>
<param><name><![CDATA[methodCallRange]]></name><description><![CDATA[stores the minimum and maximum quantity of method calls]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> when in replay state]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[verify]]></title><fullMethod><left><![CDATA[function <b>verify</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Verifies the beahvior.

 <dl>
   <dt>Replay State</dt>
   <dd>Verifies that all expectations have been met.</dd>
   <dt>Record State</dt>
   <dd>Throws an <code>IllegalStateException</code>.</dd>]]></text>
</description>
<fields>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_test_mock_AssertionFailedError.html">AssertionFailedError</a> if any expectation has not
 been met in replay state<br /><a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> when in record state]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:29:44]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>