<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[LocalServer]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Server]]></name><uri><![CDATA[org_as2lib_io_conn_core_server_Server]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker, Christoph Atteneder]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.io.conn.local.server.LocalServer]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Thursday, 05 May 2005, 17:04:12]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>LocalServer</code> acts as a composite for many services that are all combined
 in one domain.]]></summary><restOfDescription><![CDATA[<p>Example:<pre><span class="codeKeyword">var</span> server:LocalServer = <span class="codeKeyword">new</span> LocalServer(<span class="codeString">"local.as2lib.org"</span>);
server.putService(<span class="codeString">"myServiceOne"</span>, <span class="codeKeyword">new</span> MyServiceOne());
server.putService(<span class="codeString">"myServiceTwo"</span>, <span class="codeKeyword">new</span> MyServiceTwo());
server.run();</pre>]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[LocalServer]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[host]]></private></item>
<item><private><![CDATA[services]]></private></item>
<item><private><![CDATA[running]]></private></item>
<item><private><![CDATA[serverRegistry]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getServerRegistry]]></item>
<item><![CDATA[setServerRegistry]]></item>
<item><![CDATA[run]]></item>
<item><![CDATA[stop]]></item>
<item><![CDATA[putService]]></item>
<item><![CDATA[addService]]></item>
<item><![CDATA[removeService]]></item>
<item><![CDATA[getService]]></item>
<item><![CDATA[isRunning]]></item>
<item><![CDATA[getHost]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[LocalServer]]></title><fullMethod><left><![CDATA[function <b>LocalServer</b> (
]]></left><right><param><name><![CDATA[host]]></name>:<type><![CDATA[String]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>LocalServer</code> instance.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[host]]></name><description><![CDATA[the name of this server]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>host</code> is <code>null</code>,
 <code>undefined</code> or an empty string]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[host]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>host</b>:String
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Name of this server.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[running]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>running</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Server status.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[serverRegistry]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>serverRegistry</b>:<a href="org_as2lib_io_conn_core_server_ServerRegistry.html">ServerRegistry</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Stores the server registry.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[services]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>services</b>:<a href="org_as2lib_data_holder_Map.html">Map</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[All services.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[addService]]></title><fullMethod><left><![CDATA[function <b>addService</b> (
]]></left><right><param><name><![CDATA[serviceProxy]]></name>:<type><![CDATA[<a href="org_as2lib_io_conn_core_server_ServerServiceProxy.html">ServerServiceProxy</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds the passed-in <code>serviceProxy</code> to this service.<p>If this server is running, the <code>serviceProxy</code> will be run immediately
 too.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[serviceProxy]]></name><description><![CDATA[the proxy that wraps the actual service]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>serviceProxy</code> is
 <code>null</code> or <code>undefined</code> or if the path of the passed-in <code>serviceProxy</code>
 is <code>null</code>, <code>undefined</code> or an empty string or if the path of the passed-in
 <code>serviceProxy</code> is already in use]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_io_conn_local_server_LocalServer.html#putService">putService</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#addService">org.as2lib.io.conn.core.server.Server.addService</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getHost]]></title><fullMethod><left><![CDATA[function <b>getHost</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the host of this server.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[this host of this server]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#getHost">org.as2lib.io.conn.core.server.Server.getHost</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getServerRegistry]]></title><fullMethod><left><![CDATA[function <b>getServerRegistry</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_io_conn_core_server_ServerRegistry.html">ServerRegistry</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the currently used server registry.<p>This is either the server registry set via <a href="org_as2lib_io_conn_local_server_LocalServer.html#setServerRegistry">setServerRegistry</a> or the
 default registry returned by the <a href="org_as2lib_io_conn_local_LocalConfig.html#getServerRegistry">org.as2lib.io.conn.local.LocalConfig.getServerRegistry</a> method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the currently used server registry]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getService]]></title><fullMethod><left><![CDATA[function <b>getService</b> (
]]></left><right><param><name><![CDATA[path]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[<a href="org_as2lib_io_conn_core_server_ServerServiceProxy.html">ServerServiceProxy</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the service registered with the passed-in <code>path</code>.<p><code>null</code> will be returned if:<ul><li>The passed-in <code>path</code> is <code>null</code> or an empty string.</li><li>There is no service registered with the passed-in <code>path</code>.</li></ul>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[path]]></name><description><![CDATA[the path of the service to return]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the server service proxy wrapping the actual service]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#getService">org.as2lib.io.conn.core.server.Server.getService</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isRunning]]></title><fullMethod><left><![CDATA[function <b>isRunning</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Returns whether this server is running.<p>This server is by default not running. It runs as soon as you call the
 <a href="org_as2lib_io_conn_local_server_LocalServer.html#run">run</a> method. And stops when you call the {@ink #stop} method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this server is running else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#isRunning">org.as2lib.io.conn.core.server.Server.isRunning</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[putService]]></title><fullMethod><left><![CDATA[function <b>putService</b> (

]]></left><right><param><name><![CDATA[path]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[service]]></name></param>) : <![CDATA[<a href="org_as2lib_io_conn_core_server_ServerServiceProxy.html">ServerServiceProxy</a>]]></right></fullMethod>
<description>
<text><![CDATA[Puts the passed-in <code>service</code> to the passed-in <code>path</code> on this server.<p><code>service</code> and <code>path</code> are wrapped in a <a href="org_as2lib_io_conn_core_server_ServerServiceProxy.html">org.as2lib.io.conn.core.server.ServerServiceProxy</a>
 instance.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[path   ]]></name><description><![CDATA[that path to the service on the host]]></description></param>
<param><name><![CDATA[service]]></name><description><![CDATA[the service to make locally available]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the newly created server service proxy that wraps <code>service</code> and 
 <code>path</code>]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>path</code> is <code>null</code>, 
 <code>undefined</code> or an empty string or if the passed-in <code>service</code> is
 <code>null</code> or <code>undefined</code>]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_io_conn_local_server_LocalServer.html#addService">addService</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#putService">org.as2lib.io.conn.core.server.Server.putService</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeService]]></title><fullMethod><left><![CDATA[function <b>removeService</b> (
]]></left><right><param><name><![CDATA[path]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[<a href="org_as2lib_io_conn_core_server_ServerServiceProxy.html">ServerServiceProxy</a>]]></right></fullMethod>
<description>
<text><![CDATA[Removes the service registered wiht the passed-in <code>path</code>.<p>If the service is running it will be stopped.<p><code>null</code> will be returned if:<ul><li>The passed-in <code>path</code> is <code>null</code> or an empty string.</li><li>There is no registered service with the passed-in <code>path</code>.</li></ul>]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[path]]></name><description><![CDATA[the path of the service to remove]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the removed server service proxy wrapping the actual service]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#removeService">org.as2lib.io.conn.core.server.Server.removeService</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[run]]></title><fullMethod><left><![CDATA[function <b>run</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Runs this server.<p>This involves registering itself at the server registry and running all added
 services with this host.<p>If this server is already running a restart will be made. This means it will
 be stopped and run again.]]></text>
</description>
<fields>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#run">org.as2lib.io.conn.core.server.Server.run</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setServerRegistry]]></title><fullMethod><left><![CDATA[function <b>setServerRegistry</b> (
]]></left><right><param><name><![CDATA[serverRegistry]]></name>:<type><![CDATA[<a href="org_as2lib_io_conn_core_server_ServerRegistry.html">ServerRegistry</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets a new server registry.<p>If <code>serverRegistry</code> is <code>null</code> or <code>undefined</code> the
 <a href="org_as2lib_io_conn_local_server_LocalServer.html#getServerRegistry">getServerRegistry</a> method will return the default server registry.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[serverRegistry]]></name><description><![CDATA[the new server registry]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[stop]]></title><fullMethod><left><![CDATA[function <b>stop</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Stops this server.<p>This involves stopping all services and removing itself from the server registry.]]></text>
</description>
<fields>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_io_conn_core_server_Server.html#stop">org.as2lib.io.conn.core.server.Server.stop</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:29:17]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>