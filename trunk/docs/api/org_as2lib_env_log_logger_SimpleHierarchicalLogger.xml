<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[SimpleHierarchicalLogger]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></item><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[ConfigurableHierarchicalLogger]]></name><uri><![CDATA[org_as2lib_env_log_ConfigurableHierarchicalLogger]]></uri></link></item><item><link><name><![CDATA[ConfigurableLogger]]></name><uri><![CDATA[org_as2lib_env_log_ConfigurableLogger]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.log.logger.SimpleHierarchicalLogger]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Sunday, 08 May 2005, 11:55:48]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>SimpleHierarchicalLogger</code> is a simple implementation of the
 <code>ConfigurableLogger</code> and <code>ConfigurableHierarchicalLogger</code>
 interfaces.]]></summary><restOfDescription><![CDATA[<p>This logger is thus capable of functioning correctly in a hierarchy. It is
 normally used with the <code>LoggerHierarchy</code> repository.<p>The basic methods to write log messages are <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#log">log</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#debug">debug</a>,
 <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#info">info</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#warning">warning</a> and <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#fatal">fatal</a>.<p>The first thing to note is that you can log messages at different levels.
 These levels are <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code> and
 <code>FATAL</code>. Depending on what level has been set only messages at a given
 level are logged. The levels are organized in a hierarchical manner. This means
 if you set the log level to <code>ALL</code> every messages is logged. If you set it
 to <code>ERROR</code> only messages at <code>ERROR</code> and <code>FATAL</code> level are
 logged and so on. It is also possible to define your own set of levels. You can
 therefor use the <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isEnabled">isEnabled</a> and <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#log">log</a> methods. If you do not set
 a log level the level of its parent is used to decide whether the message shall
 be logged.<p>To do not waste unnecessary performance in constructing log messages that
 are not logged you can use the <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isEnabled">isEnabled</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isDebugEnabled">isDebugEnabled</a>,
 <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isInfoEnabled">isInfoEnabled</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isWarningEnabled">isWarningEnabled</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isErrorEnabled">isErrorEnabled</a>
 and <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isFatalEnabled">isFatalEnabled</a> methods.<p>Note that the message does in neither case have to be a string. That means
 you can pass-in messages and let the actual handler or logger decide how to
 produce a string representation of the message. That is in most cases done by
 using the <code>toString</code> method of the specific message. You can use this
 method to do not lose performance in cases where the message is not logged.<p>The actual logging is made by log handlers. To configure and access the
 handlers of this logger you can use the methods <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#addHandler">addHandler</a>,
 <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#removeHandler">removeHandler</a>, <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#removeAllHandlers">removeAllHandlers</a> and <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#getAllHandlers">getAllHandlers</a>.
 There are a few pre-defined handlers for different output devices. Take a look
 at the <code>org.as2lib.env.log.handler</code> package for these. This logger does
 not only use the handlers of itself but also the ones of its parents.<p>Note that advantage of this class's hierarchical support is not taken in the
 following example. Take a look at the class documentation of the
 <code>LoggerHierarchy</code> for an example that uses this support.<pre><span class="codeKeyword">var</span> logger:SimpleHierarchicalLogger = <span class="codeKeyword">new</span> SimpleHierarchicalLogger(<span class="codeString">"myLogger"</span>);
logger.setLevel(SimpleHierarchicalLogger.ALL);
logger.addHandler(<span class="codeKeyword">new</span> TraceHandler());
<span class="codeKeyword">if</span> (logger.isInfoEnabled()) {
    logger.info(<span class="codeString">"This is an information message."</span>);
}</pre>]]></restOfDescription>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_repository_LoggerHierarchy.html">org.as2lib.env.log.repository.LoggerHierarchy</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[SimpleHierarchicalLogger]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[__proto__]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Class properties inherited from]]></text><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></title><item><link><name>ALL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ALL</method></link></item><item><link><name>DEBUG</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>DEBUG</method></link></item><item><link><name>ERROR</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ERROR</method></link></item><item><link><name>FATAL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>FATAL</method></link></item><item><link><name>INFO</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>INFO</method></link></item><item><link><name>NONE</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>NONE</method></link></item><item><link><name>WARNING</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>WARNING</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[level]]></private></item>
<item><private><![CDATA[addedParentHandlers]]></private></item>
<item><private><![CDATA[parent]]></private></item>
<item><private><![CDATA[name]]></private></item>
<item><private><![CDATA[distributorControl]]></private></item>
<item><private><![CDATA[distributor]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getParent]]></item>
<item><![CDATA[setParent]]></item>
<item><![CDATA[getName]]></item>
<item><![CDATA[setName]]></item>
<item><![CDATA[setLevel]]></item>
<item><![CDATA[getLevel]]></item>
<item><![CDATA[addHandler]]></item>
<item><![CDATA[removeHandler]]></item>
<item><![CDATA[removeAllHandlers]]></item>
<item><![CDATA[getAllHandlers]]></item>
<item><private><![CDATA[addParentHandlers]]></private></item>
<item><![CDATA[isEnabled]]></item>
<item><![CDATA[isDebugEnabled]]></item>
<item><![CDATA[isInfoEnabled]]></item>
<item><![CDATA[isWarningEnabled]]></item>
<item><![CDATA[isErrorEnabled]]></item>
<item><![CDATA[isFatalEnabled]]></item>
<item><![CDATA[log]]></item>
<item><![CDATA[debug]]></item>
<item><![CDATA[info]]></item>
<item><![CDATA[warning]]></item>
<item><![CDATA[error]]></item>
<item><![CDATA[fatal]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[SimpleHierarchicalLogger]]></title><fullMethod><left><![CDATA[function <b>SimpleHierarchicalLogger</b> (
]]></left><right><param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>SimpleHierarchicalLogger</code> instance.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[name]]></name><description><![CDATA[the name of this new logger]]></description></param>
</field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_AbstractLogger.html#AbstractLogger">AbstractLogger.AbstractLogger</a>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[__proto__]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>__proto__</b>:Function = AbstractLogger
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Makes the static variables of the super-class accessible through this class.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[addedParentHandlers]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>addedParentHandlers</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Says whether the handlers array already contains the parents' handlers.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[distributor]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>distributor</b>:<a href="org_as2lib_env_log_LogHandler.html">LogHandler</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Typed distributor that distributes messages to all log handlers.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[distributorControl]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>distributorControl</b>:<a href="org_as2lib_env_event_distributor_EventDistributorControl.html">EventDistributorControl</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Distributor control that controls the distributor.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[level]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>level</b>:<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The actual level.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[name]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>name</b>:String
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The name of this logger.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[parent]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>parent</b>:<a href="org_as2lib_env_log_HierarchicalLogger.html">HierarchicalLogger</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Stores the parent.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[addHandler]]></title><fullMethod><left><![CDATA[function <b>addHandler</b> (
]]></left><right><param><name><![CDATA[handler]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogHandler.html">LogHandler</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds the new <code>handler</code>.<p>Log handlers are used to actually log the messages. They determine what
 information to log and to which output device.<p>This method simply does nothing if the passed-in handler is <code>null</code> or
 <code>undefined</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[handler]]></name><description><![CDATA[the new log handler to log messages]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#addHandler">org.as2lib.env.log.ConfigurableLogger.addHandler</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[addParentHandlers]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>addParentHandlers</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Adds the parent handlers to the distributor.]]></text>
</description>
</method>
<method>
<title><![CDATA[debug]]></title><fullMethod><left><![CDATA[function <b>debug</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at debug level.<p>The <code>message</code> is only logged when the level is set to <code>DEBUG</code> or
 a level above.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isDebugEnabled">isDebugEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#debug">org.as2lib.env.log.Logger.debug</a><br /><a href="org_as2lib_env_log_Logger.html#debug">org.as2lib.env.log.Logger.debug</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[error]]></title><fullMethod><left><![CDATA[function <b>error</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at error level.<p>The <code>message</code> is only logged when the level is set to <code>ERROR</code> or
 a level above.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isErrorEnabled">isErrorEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#error">org.as2lib.env.log.Logger.error</a><br /><a href="org_as2lib_env_log_Logger.html#error">org.as2lib.env.log.Logger.error</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[fatal]]></title><fullMethod><left><![CDATA[function <b>fatal</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at fatal level.<p>The <code>message</code> is only logged when the level is set to <code>FATAL</code> or
 a level above.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isFatalEnabled">isFatalEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#fatal">org.as2lib.env.log.Logger.fatal</a><br /><a href="org_as2lib_env_log_Logger.html#fatal">org.as2lib.env.log.Logger.fatal</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getAllHandlers]]></title><fullMethod><left><![CDATA[function <b>getAllHandlers</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Returns all handlers this logger broadcasts to when logging a message.<p>These handlers are the once directly added to this logger and the once of
 its parents.<p>The handlers of the parents are obtained via the parents
 <code>getAllHandlers</code> method which is supposed to also return the handlers of
 its parent and so on.<p>This method never returns <code>null</code> but an empty array if there are no
 handlers added to this logger nor to its parents.<p>Note that this method stores the parents handlers itself if it once obtained
 them. That is when you first log a message. It then always works with the
 stored handlers. That means that handlers added to its parents after the
 handlers have once been stored are not recognized.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[all added log handlers and the ones of the parents]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#getAllHandlers">org.as2lib.env.log.ConfigurableLogger.getAllHandlers</a><br /><a href="org_as2lib_env_log_HierarchicalLogger.html#getAllHandlers">org.as2lib.env.log.HierarchicalLogger.getAllHandlers</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getLevel]]></title><fullMethod><left><![CDATA[function <b>getLevel</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the log level of this logger.<p>If the level has not been set, that means is <code>undefined</code>, the level of
 the parent will be returned.<p><code>null</code> or <code>undefined</code> will only be returned if this level is not
 defined and the parent's <code>getLevel</code> method returns <code>null</code> or
 <code>undefined</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the log level of this logger]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#getLevel">org.as2lib.env.log.ConfigurableLogger.getLevel</a><br /><a href="org_as2lib_env_log_HierarchicalLogger.html#getLevel">org.as2lib.env.log.HierarchicalLogger.getLevel</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getName]]></title><fullMethod><left><![CDATA[function <b>getName</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the name of this logger.<p>The name is a fully qualified name and the different parts are separated by
 periods. The name could for example be <code>"org.as2lib.core.BasicClass"</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the name of this logger]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_HierarchicalLogger.html#getName">org.as2lib.env.log.HierarchicalLogger.getName</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getParent]]></title><fullMethod><left><![CDATA[function <b>getParent</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_log_HierarchicalLogger.html">HierarchicalLogger</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the parent of this logger.<p>This logger uses the parent to get the log level, if no one has been set to
 this logger manually and to get the handlers of its parents to log messages.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the parent of this logger]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_HierarchicalLogger.html#getParent">org.as2lib.env.log.HierarchicalLogger.getParent</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[info]]></title><fullMethod><left><![CDATA[function <b>info</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at info level.<p>The <code>message</code> is only logged when the level is set to <code>INFO</code> or
 a level above.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isInfoEnabled">isInfoEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#info">org.as2lib.env.log.Logger.info</a><br /><a href="org_as2lib_env_log_Logger.html#info">org.as2lib.env.log.Logger.info</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isDebugEnabled]]></title><fullMethod><left><![CDATA[function <b>isDebugEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for debug level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if debug messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#DEBUG">org.as2lib.env.log.level.AbstractLogLevel.DEBUG</a><br /><a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#debug">debug</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isDebugEnabled">org.as2lib.env.log.Logger.isDebugEnabled</a><br /><a href="org_as2lib_env_log_Logger.html#isDebugEnabled">org.as2lib.env.log.Logger.isDebugEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isEnabled]]></title><fullMethod><left><![CDATA[function <b>isEnabled</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks whether this logger is enabled for the passed-in <code>level</code>.

 <code>false</code> will be returned if:<ul><li>This logger is not enabled for the passed-in <code>level</code>.</li><li>The passed-in <code>level</code> is <code>null</code> or <code>undefined</code>.</li></ul><p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the level to make the check upon]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this logger is enabled for the given level else
 <code>false</code>]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#log">log</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isErrorEnabled]]></title><fullMethod><left><![CDATA[function <b>isErrorEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for error level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if error messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#ERROR">org.as2lib.env.log.level.AbstractLogLevel.ERROR</a><br /><a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#error">error</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isErrorEnabled">org.as2lib.env.log.Logger.isErrorEnabled</a><br /><a href="org_as2lib_env_log_Logger.html#isErrorEnabled">org.as2lib.env.log.Logger.isErrorEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isFatalEnabled]]></title><fullMethod><left><![CDATA[function <b>isFatalEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for fatal level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if fatal messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#FATAL">org.as2lib.env.log.level.AbstractLogLevel.FATAL</a><br /><a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#fatal">fatal</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isFatalEnabled">org.as2lib.env.log.Logger.isFatalEnabled</a><br /><a href="org_as2lib_env_log_Logger.html#isFatalEnabled">org.as2lib.env.log.Logger.isFatalEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isInfoEnabled]]></title><fullMethod><left><![CDATA[function <b>isInfoEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for info level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if info messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#INFO">org.as2lib.env.log.level.AbstractLogLevel.INFO</a><br /><a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#info">info</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isInfoEnabled">org.as2lib.env.log.Logger.isInfoEnabled</a><br /><a href="org_as2lib_env_log_Logger.html#isInfoEnabled">org.as2lib.env.log.Logger.isInfoEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isWarningEnabled]]></title><fullMethod><left><![CDATA[function <b>isWarningEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for warning level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if warning messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#WARNING">org.as2lib.env.log.level.AbstractLogLevel.WARNING</a><br /><a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#warning">warning</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isWarningEnabled">org.as2lib.env.log.Logger.isWarningEnabled</a><br /><a href="org_as2lib_env_log_Logger.html#isWarningEnabled">org.as2lib.env.log.Logger.isWarningEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[log]]></title><fullMethod><left><![CDATA[function <b>log</b> (

]]></left><right><param><name><![CDATA[message]]></name></param>,
<param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at the given <code>level</code>.<p>The <code>message</code> is only logged when this logger is enabled for the
 passed-in <code>level</code>.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
<param><name><![CDATA[level  ]]></name><description><![CDATA[the specific level at which the <code>message</code> shall be logged]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isEnabled">isEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeAllHandlers]]></title><fullMethod><left><![CDATA[function <b>removeAllHandlers</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes all added log handlers.]]></text>
</description>
<fields>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#removeAllHandlers">org.as2lib.env.log.ConfigurableLogger.removeAllHandlers</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[removeHandler]]></title><fullMethod><left><![CDATA[function <b>removeHandler</b> (
]]></left><right><param><name><![CDATA[handler]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogHandler.html">LogHandler</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Removes all occerrences of the passed-in <code>handler</code>.<p>If the passed-in <code>handler</code> is <code>null</code> or <code>undefined</code> the
 method invocation is simply ignored.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[handler]]></name><description><![CDATA[the log handler to remove]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#removeHandler">org.as2lib.env.log.ConfigurableLogger.removeHandler</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setLevel]]></title><fullMethod><left><![CDATA[function <b>setLevel</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the log level.<p>The <code>level</code> determines which messages to log and which not.<p>The <code>level</code> is allowed to be set to <code>null</code> or <code>undefined</code>.
 If you do so the <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#getLevel">getLevel</a> method returns the level of the parent.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the new level to control the logging of messages]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#getLevel">getLevel</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableLogger.html#setLevel">org.as2lib.env.log.ConfigurableLogger.setLevel</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setName]]></title><fullMethod><left><![CDATA[function <b>setName</b> (
]]></left><right><param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the name of this logger.<p>The name must exist of the path as well as the actual identifier. That means
 it must be fully qualified.<p>The <a href="org_as2lib_env_log_repository_LoggerHierarchy.html">org.as2lib.env.log.repository.LoggerHierarchy</a> prescribes that the different parts of the name
 must be separated by periods.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[name]]></name><description><![CDATA[the name of this logger]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableHierarchicalLogger.html#setName">org.as2lib.env.log.ConfigurableHierarchicalLogger.setName</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setParent]]></title><fullMethod><left><![CDATA[function <b>setParent</b> (
]]></left><right><param><name><![CDATA[parent]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_HierarchicalLogger.html">HierarchicalLogger</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the parent of this logger.<p>The parent is used to obtain needed configuration like handlers and levels.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[parent]]></name><description><![CDATA[the parent of this logger]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_ConfigurableHierarchicalLogger.html#setParent">org.as2lib.env.log.ConfigurableHierarchicalLogger.setParent</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[warning]]></title><fullMethod><left><![CDATA[function <b>warning</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at warning level.<p>The <code>message</code> is only logged when the level is set to <code>WARNING</code>
 or a level above.<p>The <code>message</code> is broadcasted to all log handlers of this logger and to
 the ones of its parents or more specifically to the ones returned by the 
 parent's <code>getAllHandlers</code> method, that normally also returns the handlers
 of its parents and so on.<p>Note that the handlers of the parents are resloved only once, when the first
 message is logged. They are stored in this logger to reference them faster.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html#isWarningEnabled">isWarningEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#warning">org.as2lib.env.log.Logger.warning</a><br /><a href="org_as2lib_env_log_Logger.html#warning">org.as2lib.env.log.Logger.warning</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:27:43]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>