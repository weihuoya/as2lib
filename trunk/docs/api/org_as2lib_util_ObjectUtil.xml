<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[ObjectUtil]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker, Martin Heidegger]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.util.ObjectUtil]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Saturday, 28 May 2005, 12:23:40]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>ObjectUtil</code> contains fundamental methods to efficiently and easily work
 with any type of object.]]></summary>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<private>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><private><![CDATA[ObjectUtil]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><![CDATA[TYPE_STRING]]></item>
<item><![CDATA[TYPE_NUMBER]]></item>
<item><![CDATA[TYPE_OBJECT]]></item>
<item><![CDATA[TYPE_BOOLEAN]]></item>
<item><![CDATA[TYPE_MOVIECLIP]]></item>
<item><![CDATA[TYPE_FUNCTION]]></item>
<item><![CDATA[TYPE_UNDEFINED]]></item>
<item><![CDATA[TYPE_NULL]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[stringify]]></item>
<item><![CDATA[typesMatch]]></item>
<item><![CDATA[compareTypeOf]]></item>
<item><![CDATA[isPrimitiveType]]></item>
<item><![CDATA[isTypeOf]]></item>
<item><![CDATA[isInstanceOf]]></item>
<item><![CDATA[isExplicitInstanceOf]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<private>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><private><![CDATA[ObjectUtil]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>ObjectUtil</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Private constructor.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><![CDATA[TYPE_BOOLEAN]]></title><fullMethod><left><![CDATA[static <b>TYPE_BOOLEAN</b>:String = <span class="codeString">"boolean"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects of type boolean.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_FUNCTION]]></title><fullMethod><left><![CDATA[static <b>TYPE_FUNCTION</b>:String = <span class="codeString">"function"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects of type function.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_MOVIECLIP]]></title><fullMethod><left><![CDATA[static <b>TYPE_MOVIECLIP</b>:String = <span class="codeString">"movieclip"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects of type movieclip.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_NULL]]></title><fullMethod><left><![CDATA[static <b>TYPE_NULL</b>:String = <span class="codeString">"null"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for the value null.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_NUMBER]]></title><fullMethod><left><![CDATA[static <b>TYPE_NUMBER</b>:String = <span class="codeString">"number"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects for type number.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_OBJECT]]></title><fullMethod><left><![CDATA[static <b>TYPE_OBJECT</b>:String = <span class="codeString">"object"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects of type object.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_STRING]]></title><fullMethod><left><![CDATA[static <b>TYPE_STRING</b>:String = <span class="codeString">"string"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for objects of type string.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[TYPE_UNDEFINED]]></title><fullMethod><left><![CDATA[static <b>TYPE_UNDEFINED</b>:String = <span class="codeString">"undefined"</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
<description>
<text><![CDATA[Constant for the value undefined.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#isTypeOf">isTypeOf</a>]]></description></field>
</fields>
</method>
</methodSection>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[compareTypeOf]]></title><fullMethod><left><![CDATA[static function <b>compareTypeOf</b> (

]]></left><right><param><name><![CDATA[firstObject]]></name></param>,
<param><name><![CDATA[secondObject]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Compares the results of an execution of the <code>typeof</code> method applied to
 both passed-in objects.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[firstObject ]]></name><description><![CDATA[the first object of the comparison]]></description></param>
<param><name><![CDATA[secondObject]]></name><description><![CDATA[the second object of the comparison]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the execution of the <code>typeof</code> method returns the 
 same else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isExplicitInstanceOf]]></title><fullMethod><left><![CDATA[static function <b>isExplicitInstanceOf</b> (

]]></left><right><param><name><![CDATA[object]]></name></param>,
<param><name><![CDATA[clazz]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>object</code> is an explicit instance of the passed-in
 <code>clazz</code>.<p>That means that <code>true</code> will only be returned if the object was instantiated
 directly from the given <code>clazz</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object to check whether it is an explicit instance of <code>clazz</code>]]></description></param>
<param><name><![CDATA[clazz ]]></name><description><![CDATA[the class to use as the basis for the check]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the object is an explicit instance of <code>clazz</code> else
 <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isInstanceOf]]></title><fullMethod><left><![CDATA[static function <b>isInstanceOf</b> (

]]></left><right><param><name><![CDATA[object]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>object</code> is an instance of the passed-in
 <code>type</code>.<p>If the passed-in <code>type</code> is <code>Object</code>, <code>true</code> will always be
 returned, because every object is an instance of <code>Object</code>, even <code>null</code>
 and <code>undefined</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object to check]]></description></param>
<param><name><![CDATA[type  ]]></name><description><![CDATA[the type to check whether the <code>object</code> is an instance of]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the passed-in <code>object</code> is an instance of the given
 <code>type</code> else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isPrimitiveType]]></title><fullMethod><left><![CDATA[static function <b>isPrimitiveType</b> (
]]></left><right><param><name><![CDATA[object]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>object</code> is a primitive type.<p>Primitive types are strings, numbers and booleans that are not created via the
 new operator. For example <code>"myString"</code>, <code>3</code> and <code>true</code> are
 primitive types, but <code>new String("myString")</code>, <code>new Number(3)</code> and
 <code>new Boolean(true)</code> are not.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object to check whether it is a prmitive type]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if <code>object</code> is a primitive type else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isTypeOf]]></title><fullMethod><left><![CDATA[static function <b>isTypeOf</b> (

]]></left><right><param><name><![CDATA[object]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the result of an execution of the <code>typeof</code> method on the
 passed-in <code>object</code> matches the passed-in <code>type</code>.<p>All possible types are available as constants.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object whose type to check]]></description></param>
<param><name><![CDATA[type  ]]></name><description><![CDATA[the string representation of the type]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the object is of the given <code>type</code>]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_util_ObjectUtil.html#TYPE_STRING">TYPE_STRING</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_NUMBER">TYPE_NUMBER</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_OBJECT">TYPE_OBJECT</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_BOOLEAN">TYPE_BOOLEAN</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_MOVIECLIP">TYPE_MOVIECLIP</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_NULL">TYPE_NULL</a><br /><a href="org_as2lib_util_ObjectUtil.html#TYPE_UNDEFINED">TYPE_UNDEFINED</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[stringify]]></title><fullMethod><left><![CDATA[static function <b>stringify</b> (
]]></left><right><param><name><![CDATA[object]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Stringifies the passed-in <code>object</code> using the stringifier returned by the
 static <a href="org_as2lib_Config.html#getObjectStringifier">org.as2lib.Config.getObjectStringifier</a> method.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object to stringify]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the string representation of the passed-in <code>object</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[typesMatch]]></title><fullMethod><left><![CDATA[static function <b>typesMatch</b> (

]]></left><right><param><name><![CDATA[object]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the type of the passed-in <code>object</code> matches the passed-in 
 <code>type</code>.<p>Every value (even <code>null</code> and <code>undefined</code>) matches type
 <code>Object</code>.<p>Instances as well as their primitive correspondent match the types 
 <code>String</code>, <code>Number</code> or <code>Boolean</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[object]]></name><description><![CDATA[the object whose type to compare with the passed-in <code>type</code>]]></description></param>
<param><name><![CDATA[type  ]]></name><description><![CDATA[the type to use for the comparison]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the type of the <code>object</code> matches the passed-in
 <code>type</code> else <code>false</code>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:31:10]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>