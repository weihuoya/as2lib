<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[MethodInvocationCallback]]></title>
<classDocScript />
<classData>
<kindOfClass>
<![CDATA[Interface]]>
</kindOfClass>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.io.conn.core.event.MethodInvocationCallback]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Friday, 08 April 2005, 12:13:02]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>MethodInvocationCallback</code> awaits the response of a method invocation.]]></summary><restOfDescription><![CDATA[<p>There are two types of responses.
 <dl>
   <dt>Return Response:</dt>
   <dd>
     Indicates that the method has been invoked successfully without throwing an
     exception.
   </dd>
   <dt>Error Response:</dt>
   <dd>
     Indicates that an error occured when trying to invoke the method. This error
     can for example be an exception the method threw or the unavailability of the
     method to invoke. For further details take a look at the '*_Error' constants
     declared by <a href="org_as2lib_io_conn_core_event_MethodInvocationErrorInfo.html">MethodInvocationErrorInfo</a>.
   </dd>
 </dl><p>Depending on the client and service used, that are responsible for propagating
 the methods on this callback, there may be other circumstances on which a specific
 callback method is invoked.<p>This interface can either be instantiated directly or implemented by a class.
 If you instantiate it directly you must overwrite the callback methods you wanna
 be informed of with anonymous functions.<p>Note that implementing this interface is much cleaner and less error-prone. It
 is thus recommended to implement this interface whenever possible, instead of
 overwriting the methods with anonymous functions. Note also that the direct
 instantiation of interfaces is not permitted in Flex.<pre><span class="codeKeyword">var</span> callback:MethodInvocationCallback = <span class="codeKeyword">new</span> MethodInvocationCallback();
callback.onReturn = <span class="codeKeyword">function</span>(returnInfo:MethodInvocationReturnInfo):<span class="codeIdentifier">Void</span>) {
    <span class="codeIdentifier">trace</span>(<span class="codeString">"Invoked method successfully: "</span> + returnInfo); 
}
callback.onError = <span class="codeKeyword">function</span>(errorInfo:MethodInvocationErrorInfo):<span class="codeIdentifier">Void</span> {
    <span class="codeIdentifier">trace</span>(<span class="codeString">"Error occured when trying to invoke the method: "</span> + errorInfo);
}</pre><p>Implementing the interface by a class is a much neater way. But sometimes it
 adds unnecessary complexity.<pre><span class="codeKeyword">class</span> MyCallback <span class="codeKeyword">implements</span> MethodInvocationCallback {
    <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> onReturn(returnInfo:MethodInvocationReturnInfo):<span class="codeIdentifier">Void</span> {
        <span class="codeIdentifier">trace</span>(<span class="codeString">"Invoked method successfully: "</span> + returnInfo); 
    }
    <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> onError(errorInfo:MethodInvocationErrorInfo):<span class="codeIdentifier">Void</span> {
        <span class="codeIdentifier">trace</span>(<span class="codeString">"Error occured when trying to invoke the method: "</span> + errorInfo);
    }
}</pre>]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicInterface]]></name><uri><![CDATA[org_as2lib_core_BasicInterface]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicInterface</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Event handlers]]></title>
<item><![CDATA[onReturn]]></item>
<item><![CDATA[onError]]></item>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Event handlers]]></title>
<method>
<title><![CDATA[onError]]></title><fullMethod><left><![CDATA[function <b>onError</b> (
]]></left><right><param><name><![CDATA[errorInfo]]></name>:<type><![CDATA[<a href="org_as2lib_io_conn_core_event_MethodInvocationErrorInfo.html">MethodInvocationErrorInfo</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Is executed when a method invocation fails.<p>Known issues are:<ul><li>The method threw an exception.</li><li>The method does not exist on the remote service.</li></ul><p>Remember that not all clients support this functionalities.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[errorInfo]]></name><description><![CDATA[contains information about the error and some useful information
 about the called method]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[onReturn]]></title><fullMethod><left><![CDATA[function <b>onReturn</b> (
]]></left><right><param><name><![CDATA[returnInfo]]></name>:<type><![CDATA[<a href="org_as2lib_io_conn_core_event_MethodInvocationReturnInfo.html">MethodInvocationReturnInfo</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Is executed when the return value of the method invocation arrives.<p>This indicates that the method was invoked successfully.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[returnInfo]]></name><description><![CDATA[contains the return value and some other useful information about
 the invoked method]]></description></param>
</field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:28:56]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>