<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[ClassUtil]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Martin Heidegger, Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.util.ClassUtil]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Monday, 16 May 2005, 18:56:54]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>ClassUtil</code> contains fundamental operations to efficiently and easily
 work with any class.]]></summary><restOfDescription><![CDATA[ All methods here are supposed to be used with functions
 treated as classes.]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[isSubClassOf]]></item>
<item><![CDATA[isImplementationOf]]></item>
<item><![CDATA[createCleanInstance]]></item>
<item><![CDATA[createInstance]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[createCleanInstance]]></title><fullMethod><left><![CDATA[static function <b>createCleanInstance</b> (
]]></left><right><param><name><![CDATA[clazz]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Object]]></right></fullMethod>
<description>
<text><![CDATA[Creates a new instance of the passed-in <code>clazz</code> without invoking its 
 constructor.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[clazz]]></name><description><![CDATA[the	class to create a new instance of]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[new instance of the passed-in class.]]></description></field>
<field><title><![CDATA[Author]]></title><description><![CDATA[Martin Heidegger<br />Ralf Bokelberg (www.qlod.com)]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[createInstance]]></title><fullMethod><left><![CDATA[static function <b>createInstance</b> (

]]></left><right><param><name><![CDATA[clazz]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Creates a new instance of the passed-in <code>clazz</code> applying the
 passed-in <code>args</code> to the constructor.<p>This util is mostly made for MTASC compatibility because it doesn't
 allow <code>new clazz()</code> for usual variables.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[clazz]]></name><description><![CDATA[Class to be instanciated]]></description></param>
<param><name><![CDATA[args ]]></name><description><![CDATA[Arguments to be applied to the constructor]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[new instance of the class]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isImplementationOf]]></title><fullMethod><left><![CDATA[static function <b>isImplementationOf</b> (

]]></left><right><param><name><![CDATA[clazz]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[interfaze]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>clazz</code> implements the passed-in <code>* interfaze</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[clazz    ]]></name><description><![CDATA[the class to check]]></description></param>
<param><name><![CDATA[interfaze]]></name><description><![CDATA[the interface the <code>clazz</code> may implement]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if the passed-in <code>clazz</code> implements the passed-in
 <code>interfaze</code> else <code>false</code>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isSubClassOf]]></title><fullMethod><left><![CDATA[static function <b>isSubClassOf</b> (

]]></left><right><param><name><![CDATA[subClass]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[superClass]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if the passed-in <code>subClass</code> is extended by the passed-in
 <code>superClass</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[subClass  ]]></name><description><![CDATA[the class to check]]></description></param>
<param><name><![CDATA[superClass]]></name><description><![CDATA[the class to match]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if <code>subClass</code> is a sub-class of <code>superClass</code>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:31:04]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>