<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[SimpleStack]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Stack]]></name><uri><![CDATA[org_as2lib_data_holder_Stack]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.data.holder.stack.SimpleStack]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Tuesday, 10 May 2005, 16:57:24]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>SimpleStack</code> holds data in a 'last-in, first-out' manner.]]></summary><restOfDescription><![CDATA[<p>It is a simple implementation of the <code>Stack</code> interface and realizes all
 its basic concepts.<p>'last-in, first-out' means that the last value that has been pushed to the
 stack is the first that is popped from the stack.<p>The usage of a stack is quite simple. You have one method to push values,
 <a href="org_as2lib_data_holder_stack_SimpleStack.html#push">push</a>, and one method to pop values, <a href="org_as2lib_data_holder_stack_SimpleStack.html#pop">pop</a>. You can also peek at
 the top of the stack to see what's the last value that has been pushed to the
 stack without removing it <a href="org_as2lib_data_holder_stack_SimpleStack.html#peek">peek</a>.<p>If you want to iterate over the values of the stack you can either use the
 iterator returned by the <a href="org_as2lib_data_holder_stack_SimpleStack.html#iterator">iterator</a> method or the array that contains the
 stack's values returned by the <a href="org_as2lib_data_holder_stack_SimpleStack.html#toArray">toArray</a> method.<p>The two methods <a href="org_as2lib_data_holder_stack_SimpleStack.html#isEmpty">isEmpty</a> and <a href="org_as2lib_data_holder_stack_SimpleStack.html#size">size</a> let you find out whether
 the stack contains values and how many values it contains.<p>You can modify the string representation that is returned by the <a href="org_as2lib_data_holder_stack_SimpleStack.html#toString">toString</a>
 method using the static <a href="org_as2lib_data_holder_stack_SimpleStack.html#setStringifier">setStringifier</a> method.<p>Example:<pre><span class="codeComment">// the stack is constructed somewhere</span>
<span class="codeKeyword">var</span> stack:Stack = <span class="codeKeyword">new</span> SimpleStack();
stack.push(<span class="codeString">"value1"</span>);
stack.push(<span class="codeString">"value2"</span>);
stack.push(<span class="codeString">"value3"</span>);
<span class="codeComment">// the stack is used</span>
<span class="codeIdentifier">trace</span>(stack.peek());
<span class="codeKeyword">while</span> (!stack.isEmpty()) {
    <span class="codeIdentifier">trace</span>(stack.pop());
}</pre><p>Output:<pre>value3
value3
value2
value1</pre><p>You can alternatively pass-in the content of the stack on construction.<pre><span class="codeKeyword">var</span> stack:Stack = <span class="codeKeyword">new</span> SimpleStack([<span class="codeString">"value1"</span>, <span class="codeString">"value2"</span>, <span class="codeString">"value3"</span>]);
<span class="codeComment">// ..</span></pre>]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[SimpleStack]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[stringifier]]></private></item>
</methodSummaryPart>
</private>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[values]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[getStringifier]]></item>
<item><![CDATA[setStringifier]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[push]]></item>
<item><![CDATA[pop]]></item>
<item><![CDATA[peek]]></item>
<item><![CDATA[iterator]]></item>
<item><![CDATA[isEmpty]]></item>
<item><![CDATA[size]]></item>
<item><![CDATA[toArray]]></item>
<item><![CDATA[toString]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[SimpleStack]]></title><fullMethod><left><![CDATA[function <b>SimpleStack</b> (
]]></left><right><param><name><![CDATA[source]]></name>:<type><![CDATA[Array]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>SimpleStack</code> instance.<p>The stack steps through the passed-in <code>source</code> beginning at position
 0 and pushes all contained elements to this stack.<pre><span class="codeKeyword">var</span> stack:SimpleStack = <span class="codeKeyword">new</span> SimpleStack([<span class="codeNumber">1</span>, <span class="codeNumber">2</span>, <span class="codeNumber">3</span>]);
<span class="codeKeyword">while</span> (!stack.isEmpty()) {
       <span class="codeIdentifier">trace</span>(stack.pop());
}</pre><p>The output is made in the following order: 3, 2, 1]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[source]]></name><description><![CDATA[(optional) an array that contains values to populate this stack with]]></description></param>
</field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[stringifier]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>stringifier</b>:<a href="org_as2lib_util_Stringifier.html">Stringifier</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Stringifies stacks.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[values]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>values</b>:Array
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Contains the inserted values.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[getStringifier]]></title><fullMethod><left><![CDATA[static function <b>getStringifier</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_util_Stringifier.html">Stringifier</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the stringifier that stringifies stacks.<p>If no stringifier has been set manually the default stringifier will be returned
 which is an instance of class <a href="org_as2lib_data_holder_stack_StackStringifier.html">StackStringifier</a>.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the stringifier that stringifies stacks]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setStringifier]]></title><fullMethod><left><![CDATA[static function <b>setStringifier</b> (
]]></left><right><param><name><![CDATA[stackStringifier]]></name>:<type><![CDATA[<a href="org_as2lib_util_Stringifier.html">Stringifier</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the new stringifier that stringifies stacks.<p>If the passed-in <code>stackStringifier</code> is <code>null</code> or <code>undefined</code>
 the static <a href="org_as2lib_data_holder_stack_SimpleStack.html#getStringifier">getStringifier</a> method will return the default stringifier.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[stackStringifier]]></name><description><![CDATA[the new stack stringifier]]></description></param>
</field>
</fields>
</method>
</methodSection>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[isEmpty]]></title><fullMethod><left><![CDATA[function <b>isEmpty</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Returns whether this stack is empty.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this stack is empty else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#isEmpty">org.as2lib.data.holder.Stack.isEmpty</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[iterator]]></title><fullMethod><left><![CDATA[function <b>iterator</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_data_holder_Iterator.html">Iterator</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an iterator to iterate over the values of this stack.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[an iterator to iterate over this stack]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_data_holder_stack_SimpleStack.html#toArray">toArray</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#iterator">org.as2lib.data.holder.Stack.iterator</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[peek]]></title><fullMethod><left><![CDATA[function <b>peek</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Returns the lastly pushed value without removing it.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the lastly pushed value]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_data_holder_EmptyDataHolderException.html">EmptyDataHolderException</a> if this stack is empty]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#peek">org.as2lib.data.holder.Stack.peek</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[pop]]></title><fullMethod><left><![CDATA[function <b>pop</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Removes and returns the lastly pushed value.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the lastly pushed value]]></description></field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_data_holder_EmptyDataHolderException.html">EmptyDataHolderException</a> if this stack is empty]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#pop">org.as2lib.data.holder.Stack.pop</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[push]]></title><fullMethod><left><![CDATA[function <b>push</b> (
]]></left><right><param><name><![CDATA[value]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Pushes the passed-in <code>value</code> to this stack.<p><code>null</code> or <code>undefined</code> values are allowed.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[value]]></name><description><![CDATA[the value to push to this stack]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#push">org.as2lib.data.holder.Stack.push</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[size]]></title><fullMethod><left><![CDATA[function <b>size</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Number]]></right></fullMethod>
<description>
<text><![CDATA[Returns the number of pushed values.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the number of pushed values]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_data_holder_stack_SimpleStack.html#push">push</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#size">org.as2lib.data.holder.Stack.size</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[toArray]]></title><fullMethod><left><![CDATA[function <b>toArray</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Array]]></right></fullMethod>
<description>
<text><![CDATA[Returns the array representation of this stack.<p>The elements are copied onto the array in a 'last-in, first-out' order, similar
 to the order of the elements returned by a succession of calls to the <a href="org_as2lib_data_holder_stack_SimpleStack.html#pop">pop</a>
 method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the array representation of this stack]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_data_holder_Stack.html#toArray">org.as2lib.data.holder.Stack.toArray</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[toString]]></title><fullMethod><left><![CDATA[function <b>toString</b> (
]]></left><right>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the string representation of this stack.<p>The string representation is obtained using the stringifier returned by the
 static <a href="org_as2lib_data_holder_stack_SimpleStack.html#getStringifier">getStringifier</a> method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the string representation of this stack]]></description></field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_core_BasicClass.html#toString">org.as2lib.core.BasicClass.toString</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_core_BasicInterface.html#toString">org.as2lib.core.BasicInterface.toString</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:26:38]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>