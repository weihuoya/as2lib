<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[MethodInfo]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[TypeMemberInfo]]></name><uri><![CDATA[org_as2lib_env_reflect_TypeMemberInfo]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.reflect.MethodInfo]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Friday, 27 May 2005, 10:04:18]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>MethodInfo</code> represents a method.]]></summary><restOfDescription><![CDATA[<p><code>MethodInfo</code> instances for specific methods can be obtained using the
 <a href="org_as2lib_env_reflect_ClassInfo.html#getMethods">ClassInfo.getMethods</a> or <a href="org_as2lib_env_reflect_ClassInfo.html#getMethod">ClassInfo.getMethod</a> methods. That means
 you first have to get a class info for the class that declares or inherits the
 method. You can therefor use the <a href="org_as2lib_env_reflect_ClassInfo.html#forObject">ClassInfo.forObject</a>, <a href="org_as2lib_env_reflect_ClassInfo.html#forClass">ClassInfo.forClass</a>,
 <a href="org_as2lib_env_reflect_ClassInfo.html#forInstance">ClassInfo.forInstance</a> and <a href="org_as2lib_env_reflect_ClassInfo.html#forName">ClassInfo.forName</a> methods.<p>When you have obtained the method info you can use it to get information about
 the method.<pre><span class="codeIdentifier">trace</span>(<span class="codeString">"Method name: "</span> + methodInfo.getName());
<span class="codeIdentifier">trace</span>(<span class="codeString">"Declaring type: "</span> + methodInfo.getDeclaringType().getFullName());
<span class="codeIdentifier">trace</span>(<span class="codeString">"Is Static?: "</span> + methodInfo.isStatic());</pre>]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[MethodInfo]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[stringifier]]></private></item>
</methodSummaryPart>
</private>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[name]]></private></item>
<item><private><![CDATA[method]]></private></item>
<item><private><![CDATA[declaringType]]></private></item>
<item><private><![CDATA[staticFlag]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[getStringifier]]></item>
<item><![CDATA[setStringifier]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getName]]></item>
<item><![CDATA[getFullName]]></item>
<item><![CDATA[getMethod]]></item>
<item><![CDATA[getDeclaringType]]></item>
<item><![CDATA[invoke]]></item>
<item><![CDATA[isStatic]]></item>
<item><![CDATA[toString]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[MethodInfo]]></title><fullMethod><left><![CDATA[function <b>MethodInfo</b> (



]]></left><right><param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[declaringType]]></name>:<type><![CDATA[<a href="org_as2lib_env_reflect_TypeInfo.html">TypeInfo</a>]]></type></param>,
<param><name><![CDATA[staticFlag]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[method]]></name>:<type><![CDATA[Function]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>MethodInfo</code> instance.<p>All arguments are allowed to be <code>null</code>. But keep in mind that not all
 methods will function properly if one is.<p>If <code>method</code> is not specified, it will be resolved at run-time everytime
 it is needed. This means that the concrete method will always be up-to-date even
 if you have overwritten it.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[name         ]]></name><description><![CDATA[the name of the method]]></description></param>
<param><name><![CDATA[declaringType]]></name><description><![CDATA[the declaring type of the method]]></description></param>
<param><name><![CDATA[staticFlag   ]]></name><description><![CDATA[determines whether the method is static]]></description></param>
<param><name><![CDATA[method       ]]></name><description><![CDATA[(optional) the concrete method]]></description></param>
</field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[stringifier]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>stringifier</b>:<a href="org_as2lib_util_Stringifier.html">Stringifier</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The method info stringifier.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[declaringType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>declaringType</b>:<a href="org_as2lib_env_reflect_TypeInfo.html">TypeInfo</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The type that declares this method.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[method]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>method</b>:Function
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The concrete method.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[name]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>name</b>:String
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The name of this method.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[staticFlag]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>staticFlag</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[A flag representing whether this method is static or not.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[getStringifier]]></title><fullMethod><left><![CDATA[static function <b>getStringifier</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_util_Stringifier.html">Stringifier</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the stringifier used to stringify method infos.<p>If no custom stringifier has been set via the <a href="org_as2lib_env_reflect_MethodInfo.html#setStringifier">setStringifier</a> method,
 a instance of the default <code>MethodInfoStringifier</code> class is returned.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the stringifier that stringifies method infos]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setStringifier]]></title><fullMethod><left><![CDATA[static function <b>setStringifier</b> (
]]></left><right><param><name><![CDATA[methodInfoStringifier]]></name>:<type><![CDATA[<a href="org_as2lib_env_reflect_stringifier_MethodInfoStringifier.html">MethodInfoStringifier</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the stringifier used to stringify method infos.<p>If <code>methodInfoStringifier</code> is <code>null</code> or <code>undefined</code>
 <a href="org_as2lib_env_reflect_MethodInfo.html#getStringifier">getStringifier</a> will return the default stringifier.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[methodInfoStringifier]]></name><description><![CDATA[the stringifier that stringifies method infos]]></description></param>
</field>
</fields>
</method>
</methodSection>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[getDeclaringType]]></title><fullMethod><left><![CDATA[function <b>getDeclaringType</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_reflect_TypeInfo.html">TypeInfo</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the type that declares this method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the type that declares this method]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_TypeMemberInfo.html#getDeclaringType">TypeMemberInfo.getDeclaringType</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getFullName]]></title><fullMethod><left><![CDATA[function <b>getFullName</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the full name of this method.<p>The full name is the fully qualified name of the declaring type plus the name
 of this method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the full name of this method]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_TypeMemberInfo.html#getFullName">TypeMemberInfo.getFullName</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getMethod]]></title><fullMethod><left><![CDATA[function <b>getMethod</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Function]]></right></fullMethod>
<description>
<text><![CDATA[Returns the concrete method this instance represents.<p>If the concrete method was not specified on construction it will be resolved
 on run-time by this method everytime asked for. The returned method is thus
 always the current method on the declaring type.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the concrete method]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getName]]></title><fullMethod><left><![CDATA[function <b>getName</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the name of this method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the name of this method]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_MemberInfo.html#getName">MemberInfo.getName</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[invoke]]></title><fullMethod><left><![CDATA[function <b>invoke</b> (

]]></left><right><param><name><![CDATA[scope]]></name></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Invokes this method on the passed-in <code>scope</code> passing the given <code>args</code>.<p>The object referenced by <code>this</code> in this method is the object this method
 is invoked on, its / the passed-in <code>scope</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[scope]]></name><description><![CDATA[the <code>this</code>-scope for the method invocation]]></description></param>
<param><name><![CDATA[args ]]></name><description><![CDATA[the arguments to pass-to the method on invocation]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the return value of the method invocation]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isStatic]]></title><fullMethod><left><![CDATA[function <b>isStatic</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Returns whether this method is static or not.<p>Static methods are methods per type.<p>Non-Static methods are methods per instance.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this method is static else <code>false</code>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_reflect_TypeMemberInfo.html#isStatic">TypeMemberInfo.isStatic</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[toString]]></title><fullMethod><left><![CDATA[function <b>toString</b> (
]]></left><right>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the string representation of this method.<p>The string representation is obtained via the stringifier returned by the
 static <a href="org_as2lib_env_reflect_MethodInfo.html#getStringifier">getStringifier</a> method.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the string representation of this method]]></description></field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_core_BasicClass.html#toString">org.as2lib.core.BasicClass.toString</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_core_BasicInterface.html#toString">org.as2lib.core.BasicInterface.toString</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:28:24]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>