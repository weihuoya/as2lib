<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[TraceLogger]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></item><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Logger]]></name><uri><![CDATA[org_as2lib_env_log_Logger]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.log.logger.TraceLogger]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Saturday, 28 May 2005, 16:54:54]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>TraceLogger</code> logs messages using <code>trace</code>.]]></summary><restOfDescription><![CDATA[<p>The actual logging is always made using <code>trace</code>. No other output 
 devices are supported. Use the <a href="org_as2lib_env_log_logger_SimpleLogger.html">SimpleLogger</a> to be able to add log
 handlers as you please which allows you to log to every device you want.<p>The basic methods to write the log messages are <a href="org_as2lib_env_log_logger_TraceLogger.html#log">log</a>, <a href="org_as2lib_env_log_logger_TraceLogger.html#debug">debug</a>,
 <a href="org_as2lib_env_log_logger_TraceLogger.html#info">info</a>, <a href="org_as2lib_env_log_logger_TraceLogger.html#warning">warning</a> and <a href="org_as2lib_env_log_logger_TraceLogger.html#fatal">fatal</a>.<p>The first thing to note is that you can log messages at different levels.
 These levels are <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>
 and <code>FATAL</code>. Depending on what level has been set only messages at a
 given level are logged. The levels are organized in a hierarchical manner. That
 means if you set the log level to <code>ALL</code> every messages is logged. If you
 set it to <code>ERROR</code> only messages at <code>ERROR</code> and <code>FATAL</code> level
 are logged and so on.<p>To do not waste unnecessary performance in constructing log messages that are
 not logged you can use the <a href="org_as2lib_env_log_logger_TraceLogger.html#isDebugEnabled">isDebugEnabled</a>, <a href="org_as2lib_env_log_logger_TraceLogger.html#isInfoEnabled">isInfoEnabled</a>,
 <a href="org_as2lib_env_log_logger_TraceLogger.html#isWarningEnabled">isWarningEnabled</a>, <a href="org_as2lib_env_log_logger_TraceLogger.html#isErrorEnabled">isErrorEnabled</a> and <a href="org_as2lib_env_log_logger_TraceLogger.html#isFatalEnabled">isFatalEnabled</a>
 methods.<p>Note that the message does in neither case have to be a string. That means
 you can pass-in messages and let the actual handler or logger decide how to
 produce a string representation of the message. That is in most cases done by
 using the <code>toString</code> method of the specific message. You can use this
 method to do not lose performance in cases where the message is not logged.<p>Example:<pre><span class="codeKeyword">var</span> logger:TraceLogger = <span class="codeKeyword">new</span> TraceLogger(<span class="codeString">"myTraceLogger"</span>);
<span class="codeComment">// checks if the output gets actually made</span>
<span class="codeKeyword">if</span> (logger.isInfoEnabled()) {
      <span class="codeComment">// log the message at the info level</span>
    logger.info(<span class="codeString">"This is a informative log message."</span>);
}</pre><p>This logger cannot be used with the {@ling LoggerHierarchy} because it does
 not offer hierarchy support. If you want to use your logger in a hierarchy use
 the <a href="org_as2lib_env_log_logger_SimpleHierarchicalLogger.html">SimpleHierarchicalLogger</a> instead.]]></restOfDescription>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[TraceLogger]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[__proto__]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Class properties inherited from]]></text><link><name><![CDATA[AbstractLogger]]></name><uri><![CDATA[org_as2lib_env_log_logger_AbstractLogger]]></uri></link></title><item><link><name>ALL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ALL</method></link></item><item><link><name>DEBUG</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>DEBUG</method></link></item><item><link><name>ERROR</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>ERROR</method></link></item><item><link><name>FATAL</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>FATAL</method></link></item><item><link><name>INFO</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>INFO</method></link></item><item><link><name>NONE</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>NONE</method></link></item><item><link><name>WARNING</name><uri>org_as2lib_env_log_logger_AbstractLogger</uri><method>WARNING</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[level]]></private></item>
<item><private><![CDATA[levelAsNumber]]></private></item>
<item><private><![CDATA[name]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getName]]></item>
<item><![CDATA[setName]]></item>
<item><![CDATA[setLevel]]></item>
<item><![CDATA[getLevel]]></item>
<item><![CDATA[isEnabled]]></item>
<item><![CDATA[isDebugEnabled]]></item>
<item><![CDATA[isInfoEnabled]]></item>
<item><![CDATA[isWarningEnabled]]></item>
<item><![CDATA[isErrorEnabled]]></item>
<item><![CDATA[isFatalEnabled]]></item>
<item><![CDATA[log]]></item>
<item><![CDATA[debug]]></item>
<item><![CDATA[info]]></item>
<item><![CDATA[warning]]></item>
<item><![CDATA[error]]></item>
<item><![CDATA[fatal]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[TraceLogger]]></title><fullMethod><left><![CDATA[function <b>TraceLogger</b> (
]]></left><right><param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>TraceLogger</code> instance.<p>The default log level is <code>ALL</code>. This means all messages regardless of
 their level are logged.<p>The <code>name</code> is by default shown in the log message to identify where
 the message came from.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[name]]></name><description><![CDATA[(optional) the name of this logger]]></description></param>
</field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_AbstractLogger.html#AbstractLogger">AbstractLogger.AbstractLogger</a>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[__proto__]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>__proto__</b>:Function = AbstractLogger
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Makes the static variables of the super-class accessible through this class.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[level]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>level</b>:<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The set level.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[levelAsNumber]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>levelAsNumber</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The set level as number.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[name]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>name</b>:String
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The name of this logger.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[debug]]></title><fullMethod><left><![CDATA[function <b>debug</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at debug level.<p>The <code>message</code> is only logged when the level is set to <code>DEBUG</code> or
 a level above.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isDebugEnabled">isDebugEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#debug">org.as2lib.env.log.Logger.debug</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[error]]></title><fullMethod><left><![CDATA[function <b>error</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at error level.<p>The <code>message</code> is only logged when the level is set to <code>ERROR</code> or
 a level above.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isErrorEnabled">isErrorEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#error">org.as2lib.env.log.Logger.error</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[fatal]]></title><fullMethod><left><![CDATA[function <b>fatal</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at fatal level.<p>The <code>message</code> is only logged when the level is set to <code>FATAL</code> or
 a level above.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isFatalEnabled">isFatalEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#fatal">org.as2lib.env.log.Logger.fatal</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getLevel]]></title><fullMethod><left><![CDATA[function <b>getLevel</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the set level.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the set level]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getName]]></title><fullMethod><left><![CDATA[function <b>getName</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[String]]></right></fullMethod>
<description>
<text><![CDATA[Returns the name of this logger.<p>This method returns <code>null</code> if no name has been set via the
 <a href="org_as2lib_env_log_logger_TraceLogger.html#setName">setName</a> method nor on construction.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the name of this logger]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[info]]></title><fullMethod><left><![CDATA[function <b>info</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at info level.<p>The <code>message</code> is only logged when the level is set to <code>INFO</code> or
 a level above.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isInfoEnabled">isInfoEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#info">org.as2lib.env.log.Logger.info</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isDebugEnabled]]></title><fullMethod><left><![CDATA[function <b>isDebugEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for debug level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if debug messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#DEBUG">org.as2lib.env.log.level.AbstractLogLevel.DEBUG</a><br /><a href="org_as2lib_env_log_logger_TraceLogger.html#debug">debug</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isDebugEnabled">org.as2lib.env.log.Logger.isDebugEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isEnabled]]></title><fullMethod><left><![CDATA[function <b>isEnabled</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks whether this logger is enabled for the passed-in <code>level</code>.<p><code>false</code> will be returned if:<ul><li>This logger is not enabled for the passed-in <code>level</code>.</li><li>The passed-in <code>level</code> is <code>null</code> or <code>undefined</code>.</li></ul><p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the level to make the check upon]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if this logger is enabled for the given <code>level</code> else
 <code>false</code>]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#log">log</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isErrorEnabled]]></title><fullMethod><left><![CDATA[function <b>isErrorEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for error level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if error messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#ERROR">org.as2lib.env.log.level.AbstractLogLevel.ERROR</a><br /><a href="org_as2lib_env_log_logger_TraceLogger.html#error">error</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isErrorEnabled">org.as2lib.env.log.Logger.isErrorEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isFatalEnabled]]></title><fullMethod><left><![CDATA[function <b>isFatalEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for fatal level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if fatal messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#FATAL">org.as2lib.env.log.level.AbstractLogLevel.FATAL</a><br /><a href="org_as2lib_env_log_logger_TraceLogger.html#fatal">fatal</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isFatalEnabled">org.as2lib.env.log.Logger.isFatalEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isInfoEnabled]]></title><fullMethod><left><![CDATA[function <b>isInfoEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for info level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if info messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#INFO">org.as2lib.env.log.level.AbstractLogLevel.INFO</a><br /><a href="org_as2lib_env_log_logger_TraceLogger.html#info">info</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isInfoEnabled">org.as2lib.env.log.Logger.isInfoEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[isWarningEnabled]]></title><fullMethod><left><![CDATA[function <b>isWarningEnabled</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Checks if this logger is enabled for warning level log messages.<p>Using this method as shown in the class documentation may improve performance
 depending on how long the log message construction takes.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[<code>true</code> if warning messages are logged]]></description></field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_level_AbstractLogLevel.html#WARNING">org.as2lib.env.log.level.AbstractLogLevel.WARNING</a><br /><a href="org_as2lib_env_log_logger_TraceLogger.html#warning">warning</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#isWarningEnabled">org.as2lib.env.log.Logger.isWarningEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[log]]></title><fullMethod><left><![CDATA[function <b>log</b> (

]]></left><right><param><name><![CDATA[message]]></name></param>,
<param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at the given <code>level</code>.<p>The <code>message</code> is only logged when this logger is enabled for the
 passed-in <code>level</code>.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
<param><name><![CDATA[level  ]]></name><description><![CDATA[the specific level at which the <code>message</code> shall be logged]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isEnabled">isEnabled</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setLevel]]></title><fullMethod><left><![CDATA[function <b>setLevel</b> (
]]></left><right><param><name><![CDATA[level]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogLevel.html">LogLevel</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the log level.<p>The log level determines which messages are logged and which are not.<p>A level of value <code>null</code> or <code>undefined</code> is interpreted as level
 <code>ALL</code> which is also the default level.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[level]]></name><description><![CDATA[the new log level]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[setName]]></title><fullMethod><left><![CDATA[function <b>setName</b> (
]]></left><right><param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Sets the name of this logger.<p>The name is by default shown in the log message.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[name]]></name><description><![CDATA[the new name of this logger]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[warning]]></title><fullMethod><left><![CDATA[function <b>warning</b> (
]]></left><right><param><name><![CDATA[message]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Logs the passed-in <code>message</code> at warning level.<p>The <code>message</code> is only logged when the level is set to <code>WARNING</code>
 or a level above.<p>The <code>message</code> is always logged using <code>trace</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message object to log]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_TraceLogger.html#isWarningEnabled">isWarningEnabled</a>]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_Logger.html#warning">org.as2lib.env.log.Logger.warning</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:27:49]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>