<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[TestCase]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[Test]]></name><uri><![CDATA[org_as2lib_test_unit_Test]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Version]]></title><value><![CDATA[1.2]]></value></item>
<item><title><![CDATA[Author]]></title><value><![CDATA[Martin Heidegger]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.test.unit.TestCase]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Tuesday, 31 May 2005, 17:11:58]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[Basic Testcase class to be extended.]]></summary><restOfDescription><![CDATA[
 A Testcase defines the Access to all parts of the TestUnit System of as2lib.
 
 It is handled as an abstract class this means you have to extend it if you 
 want to work with the system (similar to the most other testunit systems).<pre><span class="codeKeyword">import</span> org.as2lib.test.unit.TestCase;

<span class="codeKeyword">class</span> MyTestCase <span class="codeKeyword">extends</span> TestCase {
}</pre>
 
 A testcase usually gets processed by <a href="org_as2lib_test_unit_TestCase.html#run">run</a>. 
 The System will fetch all Methods starting with "test" and execute them in
 a new, isolated instance. Before each method call the methods <a href="org_as2lib_test_unit_TestCase.html#setUp">setUp</a> and
 <a href="org_as2lib_test_unit_TestCase.html#tearDown">tearDown</a> will get called.

 Example:
   Testcase:<pre><span class="codeKeyword">import</span> org.as2lib.test.unit.TestCase;

<span class="codeKeyword">class</span> MyTestCase <span class="codeKeyword">extends</span> TestCase {
  <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> TestCase(<span class="codeIdentifier">Void</span>) {
    <span class="codeIdentifier">trace</span>('<span class="codeKeyword">new</span> instance');
  }
  <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> setUp(<span class="codeIdentifier">Void</span>){
    <span class="codeIdentifier">trace</span>('<span class="codeIdentifier">set</span> up');
  }
  <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> testMyFirstTest(<span class="codeIdentifier">Void</span>) {
    <span class="codeIdentifier">trace</span>('myFirstTest');
  }
  <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> testMySecondTest(<span class="codeIdentifier">Void</span>) {
    <span class="codeIdentifier">trace</span>('mySecondTest');
  }
  <span class="codeKeyword">public</span> <span class="codeKeyword">function</span> tearDown(<span class="codeIdentifier">Void</span>){
    <span class="codeIdentifier">trace</span>('tear down');
  }
}</pre>
   Call:<pre><span class="codeKeyword">new</span> MyTestCase().run();</pre>
   Result:<pre><span class="codeKeyword">new</span> instance
<span class="codeIdentifier">set</span> up
myFirstTest
tear down
<span class="codeKeyword">new</span> instance
<span class="codeIdentifier">set</span> up
mySecondTest
tear down</pre>
 
 Within the "test"-methods you have access to different assert methods:<table><thead><tr><th>Methodname</th><th>Checks</th></tr></thead>
   <tbody><tr><th>assertTrue</th><td><i>value</i> === true</td></tr><tr><th>assertFalse</th><td><i>value</i> === false</td></tr><tr><th>assertEquals</th><td><i>a</i> == <i>b</i></td></tr><tr><th>assertAlmostEquals</th><td>(<i>a</i> < <i>b</i> && <i>a</i>+x > <i>b</i>) || (<i>a</i> > <i>b</i> && <i>a</i>-x < <i>b</i>)</td></tr><tr><th>assertNotEquals</th><td><i>a</i> != <i>b</i></td></tr><tr><th>assertSame</th><td><i>a</i> === <i>b</i></td></tr><tr><th>assertNotSame</th><td><i>a</i> !== <i>b</i></td></tr><tr><th>assertNull</th><td><i>value</i> === null</td></tr><tr><th>assertNotNull</th><td><i>value</i> !== null</td></tr><tr><th>assertUndefined</th><td><i>value</i> === undefined</td></tr><tr><th>assertNotUndefined</th><td><i>value</i> !== undefined</td></tr><tr><th>assertEmpty</th><td><i>value</i> == null (equals == undefined)</td></tr><tr><th>assertNotEmpty</th><td><i>value</i> != null (equals != undefined)</td></tr><tr><th>assertInfinity</th><td><i>value</i> === Infinity</td></tr><tr><th>assertNotInfinity</th><td><i>value</i> !== Infinity</td></tr><tr><th>assertThrows</th><td><i>call</i>(<i>arguments</i>) throws <i>exception</i></td></tr><tr><th>assertNotThrows</th><td><i>call</i>(<i>arguments</i>) doesnt throw <i>exception</i></td></tr><tr><th>assertTypeOf</th><td><i>value</i> typeof <i>type</i></td></tr><tr><th>assertInstanceOf</th><td><i>value</i> instanceof <i>type</i></td></tr></tbody></table>You have also got the possibility to simple fail the Testcase by <a href="org_as2lib_test_unit_TestCase.html#fail">fail</a>.]]></restOfDescription>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestSuite.html">TestSuite</a><br /><a href="org_as2lib_test_unit_Test.html">Test</a><br /><a href="org_as2lib_test_unit_TestResult.html">TestResult</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<private>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><private><![CDATA[TestCase]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[resultFactory]]></private></item>
<item><![CDATA[DEFAULT_MAX_DIFF]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[testRunner]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getResultFactory]]></item>
<item><![CDATA[setUp]]></item>
<item><![CDATA[tearDown]]></item>
<item><![CDATA[run]]></item>
<item><private><![CDATA[pause]]></private></item>
<item><private><![CDATA[resume]]></private></item>
<item><private><![CDATA[startProcess]]></private></item>
<item><![CDATA[setTestRunner]]></item>
<item><![CDATA[getTestRunner]]></item>
<item><private><![CDATA[getMethodInformation]]></private></item>
<item><private><![CDATA[fail]]></private></item>
<item><private><![CDATA[assertTrue]]></private></item>
<item><private><![CDATA[assertTrueWithoutMessage]]></private></item>
<item><private><![CDATA[assertTrueWithMessage]]></private></item>
<item><private><![CDATA[assertFalse]]></private></item>
<item><private><![CDATA[assertFalseWithoutMessage]]></private></item>
<item><private><![CDATA[assertFalseWithMessage]]></private></item>
<item><private><![CDATA[assertEquals]]></private></item>
<item><private><![CDATA[assertEqualsWithoutMessage]]></private></item>
<item><private><![CDATA[assertEqualsWithMessage]]></private></item>
<item><private><![CDATA[assertAlmostEquals]]></private></item>
<item><private><![CDATA[assertAlmostEqualsWithoutMessageWithoutMaxDiff]]></private></item>
<item><private><![CDATA[assertAlmostEqualsWithMessageWithoutMaxDiff]]></private></item>
<item><private><![CDATA[assertAlmostEqualsWithoutMessageWithMaxDiff]]></private></item>
<item><private><![CDATA[assertAlmostEqualsWithMessageWithMaxDiff]]></private></item>
<item><private><![CDATA[assertNotEquals]]></private></item>
<item><private><![CDATA[assertNotEqualsWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotEqualsWithMessage]]></private></item>
<item><private><![CDATA[assertSame]]></private></item>
<item><private><![CDATA[assertSameWithoutMessage]]></private></item>
<item><private><![CDATA[assertSameWithMessage]]></private></item>
<item><private><![CDATA[assertNotSame]]></private></item>
<item><private><![CDATA[assertNotSameWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotSameWithMessage]]></private></item>
<item><private><![CDATA[assertNull]]></private></item>
<item><private><![CDATA[assertNullWithoutMessage]]></private></item>
<item><private><![CDATA[assertNullWithMessage]]></private></item>
<item><private><![CDATA[assertNotNull]]></private></item>
<item><private><![CDATA[assertNotNullWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotNullWithMessage]]></private></item>
<item><private><![CDATA[assertUndefined]]></private></item>
<item><private><![CDATA[assertUndefinedWithoutMessage]]></private></item>
<item><private><![CDATA[assertUndefinedWithMessage]]></private></item>
<item><private><![CDATA[assertNotUndefined]]></private></item>
<item><private><![CDATA[assertNotUndefinedWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotUndefinedWithMessage]]></private></item>
<item><private><![CDATA[assertInfinity]]></private></item>
<item><private><![CDATA[assertInfinityWithoutMessage]]></private></item>
<item><private><![CDATA[assertInfinityWithMessage]]></private></item>
<item><private><![CDATA[assertNotInfinity]]></private></item>
<item><private><![CDATA[assertNotInfinityWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotInfinityWithMessage]]></private></item>
<item><private><![CDATA[assertEmpty]]></private></item>
<item><private><![CDATA[assertEmptyWithoutMessage]]></private></item>
<item><private><![CDATA[assertEmptyWithMessage]]></private></item>
<item><private><![CDATA[assertNotEmpty]]></private></item>
<item><private><![CDATA[assertNotEmptyWithoutMessage]]></private></item>
<item><private><![CDATA[assertNotEmptyWithMessage]]></private></item>
<item><private><![CDATA[assertThrows]]></private></item>
<item><private><![CDATA[assertThrowsWithCall]]></private></item>
<item><private><![CDATA[assertThrowsWithCallAndType]]></private></item>
<item><private><![CDATA[assertThrowsWithString]]></private></item>
<item><private><![CDATA[assertThrowsWithStringAndType]]></private></item>
<item><private><![CDATA[assertThrowsWithFunction]]></private></item>
<item><private><![CDATA[assertThrowsWithFunctionAndType]]></private></item>
<item><private><![CDATA[assertThrowsWithCallAndMessage]]></private></item>
<item><private><![CDATA[assertThrowsWithCallAndMessageAndType]]></private></item>
<item><private><![CDATA[assertThrowsWithStringAndMessage]]></private></item>
<item><private><![CDATA[assertThrowsWithStringAndMessageAndType]]></private></item>
<item><private><![CDATA[assertThrowsWithFunctionAndMessage]]></private></item>
<item><private><![CDATA[assertThrowsWithFunctionAndMessageAndType]]></private></item>
<item><private><![CDATA[assertNotThrows]]></private></item>
<item><private><![CDATA[assertNotThrowsWithCall]]></private></item>
<item><private><![CDATA[assertNotThrowsWithCallAndType]]></private></item>
<item><private><![CDATA[assertNotThrowsWithString]]></private></item>
<item><private><![CDATA[assertNotThrowsWithStringAndType]]></private></item>
<item><private><![CDATA[assertNotThrowsWithFunction]]></private></item>
<item><private><![CDATA[assertNotThrowsWithFunctionAndType]]></private></item>
<item><private><![CDATA[assertNotThrowsWithCallAndMessage]]></private></item>
<item><private><![CDATA[assertNotThrowsWithCallAndMessageAndType]]></private></item>
<item><private><![CDATA[assertNotThrowsWithStringAndMessage]]></private></item>
<item><private><![CDATA[assertNotThrowsWithStringAndMessageAndType]]></private></item>
<item><private><![CDATA[assertNotThrowsWithFunctionAndMessage]]></private></item>
<item><private><![CDATA[assertNotThrowsWithFunctionAndMessageAndType]]></private></item>
<item><private><![CDATA[assertTypeOf]]></private></item>
<item><private><![CDATA[assertTypeOfWithoutMessage]]></private></item>
<item><private><![CDATA[assertTypeOfWithMessage]]></private></item>
<item><private><![CDATA[assertInstanceOf]]></private></item>
<item><private><![CDATA[assertInstanceOfWithoutMessage]]></private></item>
<item><private><![CDATA[assertInstanceOfWithMessage]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<private>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><private><![CDATA[TestCase]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>TestCase</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Abstract constructor. You should extend this class to use the API.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><![CDATA[DEFAULT_MAX_DIFF]]></title><fullMethod><left><![CDATA[static <b>DEFAULT_MAX_DIFF</b>:Number = <span class="codeNumber">0.0000001</span>
]]></left><right></right></fullMethod><access><![CDATA[(read,write)]]></access>
</method>
<method>
<title><private><![CDATA[resultFactory]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>resultFactory</b>:<a href="org_as2lib_test_unit_TestCaseResultFactory.html">TestCaseResultFactory</a>
]]></left><right></right></fullMethod>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[testRunner]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>testRunner</b>:<a href="org_as2lib_test_unit_TestRunner.html">TestRunner</a>
]]></left><right></right></fullMethod>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><private><![CDATA[assertAlmostEquals]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertAlmostEquals</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithMessageWithMaxDiff">assertAlmostEqualsWithMessageWithMaxDiff</a> <code>(message:String, val:Number, compareTo:Number, maxDiff:Number) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithoutMessageWithMaxDiff">assertAlmostEqualsWithoutMessageWithMaxDiff</a> <code>(val:Number, compareTo:Number, maxDiff:Number) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithMessageWithoutMaxDiff">assertAlmostEqualsWithMessageWithoutMaxDiff</a> <code>(message:String, val:Number, compareTo:Number) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithoutMessageWithoutMaxDiff">assertAlmostEqualsWithoutMessageWithoutMaxDiff</a> <code>(val:Number, compareTo:Number) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertAlmostEqualsWithMessageWithMaxDiff]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertAlmostEqualsWithMessageWithMaxDiff</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[compareTo]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[maxDiff]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two number are the same with some difference value.
 This method asserts the same like <a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithoutMessageWithMaxDiff">assertAlmostEqualsWithoutMessageWithMaxDiff</a>
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[Message to be applied if a failure occurs]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[number1 to be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[number2 to compare with val.]]></description></param>
<param><name><![CDATA[maxDiff  ]]></name><description><![CDATA[max. difference between those two numbers.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEquals">assertAlmostEquals</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertAlmostEqualsWithMessageWithoutMaxDiff]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertAlmostEqualsWithMessageWithoutMaxDiff</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[compareTo]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two number are the same with some difference value.
 This method asserts the same like <a href="org_as2lib_test_unit_TestCase.html#assertAlmostEqualsWithoutMessageWithoutMaxDiff">assertAlmostEqualsWithoutMessageWithoutMaxDiff</a>
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[message to be added to the failure.]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[number1 to be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[number2 to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEquals">assertAlmostEquals</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertAlmostEqualsWithoutMessageWithMaxDiff]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertAlmostEqualsWithoutMessageWithMaxDiff</b> (


]]></left><right><param><name><![CDATA[val]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[compareTo]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[maxDiff]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two number are the same with some difference value.
 This method compares two number if they are almost the same.
 It compares the two numbers by including a unsharpning buffer (applied as argument).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[number1 to be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[number2 to compare with val.]]></description></param>
<param><name><![CDATA[maxDiff  ]]></name><description><![CDATA[max. difference between those two numbers.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEquals">assertAlmostEquals</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertAlmostEqualsWithoutMessageWithoutMaxDiff]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertAlmostEqualsWithoutMessageWithoutMaxDiff</b> (

]]></left><right><param><name><![CDATA[val]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[compareTo]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two number are the same with some difference value.
 This method compares two number if they are almost the same.
 It compares the two numbers by including a unsharpning buffer <a href="org_as2lib_test_unit_TestCase.html#DEFAULT_MAX_DIFF">DEFAULT_MAX_DIFF</a>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[number1 to be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[number2 to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertAlmostEquals">assertAlmostEquals</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEmpty]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEmpty</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertEmptyWithMessage">assertEmptyWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmptyWithoutMessage">assertEmptyWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEmptyWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEmptyWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is empty else it fails.
 This method asserts the same like @see #assertEmptyWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should be empty.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmptyWithoutMessage">assertEmptyWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEmptyWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEmptyWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is empty else it fails.
 Method to assert that a value is empty, in sense of
 is null or undefined. (== null || == undefined)]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should be empty.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmptyWithMessage">assertEmptyWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEquals]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEquals</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertEqualsWithMessage">assertEqualsWithMessage</a> <code>(message:String, val, compareTo) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertEqualsWithoutMessage">assertEqualsWithoutMessage</a> <code>(val, compareTo) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEqualsWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEqualsWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables contain the same value else it fails.
 This method asserts the same like @see #assertEqualsWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEqualsWithoutMessage">assertEqualsWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertEqualsWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertEqualsWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables contain the same value else it fails.
 This method compares two variables if they contain the same value.
 It compares the two variables with "==". @see #assertSame compares
 two variables with "===" as exact reference match.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEqualsWithMessage">assertEqualsWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertFalse]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertFalse</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[overload]]></text>
</description>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertFalseWithMessage">assertFalseWithMessage</a> <code>(message:String, val:Boolean) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertFalseWithoutMessage">assertFalseWithoutMessage</a> <code>(val:Boolean) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertFalseWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertFalseWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name>:<type><![CDATA[Boolean]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a valueis false or fails.
 This method asserts the same like @see #assertFalseWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Boolean that should be "false".]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTrue">assertTrue</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertFalse">assertFalse</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertFalseWithoutMessage">assertFalseWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertFalseWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertFalseWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name>:<type><![CDATA[Boolean]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is false else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Boolean that should be "false".]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTrue">assertTrue</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertFalse">assertFalse</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertFalseWithMessage">assertFalseWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInfinity]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInfinity</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInfinityWithMessage">assertInfinityWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertInfinityWithoutMessage">assertInfinityWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInfinityWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInfinityWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is infinity else it fails.
 This method asserts the same like @see #assertInfinityWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should be Infinity.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotInfinity">assertNotInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertInfinity">assertInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertInfinityWithoutMessage">assertInfinityWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInfinityWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInfinityWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is infinity else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should be Infinity.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotInfinity">assertNotInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertInfinity">assertInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertInfinityWithMessage">assertInfinityWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInstanceOf]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInstanceOf</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInstanceOfWithMessage">assertInstanceOfWithMessage</a> <code>(message:String, val, type:Function) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertInstanceOfWithoutMessage">assertInstanceOfWithoutMessage</a> <code>(val, type:Function) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInstanceOfWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInstanceOfWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message to be appended if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Value to be validated.]]></description></param>
<param><name><![CDATA[type   ]]></name><description><![CDATA[Expected type of the value.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInstanceOfWithoutMessage">assertInstanceOfWithoutMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertInstanceOfWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertInstanceOfWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[Function]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is a instance of a special type.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val ]]></name><description><![CDATA[Value to be validated.]]></description></param>
<param><name><![CDATA[type]]></name><description><![CDATA[Expected type of the value.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInstanceOfWithoutMessage">assertInstanceOfWithoutMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEmpty]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEmpty</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotEmptyWithMessage">assertNotEmptyWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmptyWithoutMessage">assertNotEmptyWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEmptyWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEmptyWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is not empty else it fails.
 This method asserts the same like @see #assertNotEmptyWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should not be empty.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmptyWithoutMessage">assertNotEmptyWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEmptyWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEmptyWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is not empty else it fails.
 Method to assert that a value is not empty, in sense of
 neither null or undefined. (!= null || != undefined)]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should not be empty.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmptyWithMessage">assertNotEmptyWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEquals]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEquals</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotEqualsWithMessage">assertNotEqualsWithMessage</a> <code>(message:String, val, compareTo) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEqualsWithoutMessage">assertNotEqualsWithoutMessage</a> <code>(val, compareTo) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEqualsWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEqualsWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables do not contain the same value else it fails.
 This method asserts the same like <a href="org_as2lib_test_unit_TestCase.html#assertNotEqualsWithoutMessage">assertNotEqualsWithoutMessage</a>
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEqualsWithoutMessage">assertNotEqualsWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotEqualsWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotEqualsWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables do not contain the same value else it fails.
 This method compares two variables if they do not contain the same value.
 It compares the two variables with "!=". @see #assertNotSame compares
 two variables with "!==" as exact reference match.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEqualsWithMessage">assertNotEqualsWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotInfinity]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotInfinity</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotInfinityWithMessage">assertNotInfinityWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotInfinityWithoutMessage">assertNotInfinityWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotInfinityWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotInfinityWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is not infinity else it fails.
 This method asserts the same like @see #assertInfinityWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should not be Infinity.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInfinity">assertInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotInfinity">assertNotInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotInfinityWithoutMessage">assertNotInfinityWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotInfinityWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotInfinityWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that a value is not Infinity else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should not be Infinity.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertInfinity">assertInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotInfinity">assertNotInfinity</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotInfinityWithMessage">assertNotInfinityWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotNull]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotNull</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotNullWithMessage">assertNotNullWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNullWithoutMessage">assertNotNullWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotNullWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotNullWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is not (!==) null else it fails.
 This method asserts the same like @see #assertNotNullWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should not be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNullWithoutMessage">assertNotNullWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotNullWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotNullWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is not (!==) null else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should not be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNullWithMessage">assertNotNullWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotSame]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotSame</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotSameWithMessage">assertNotSameWithMessage</a> <code>(message:String, val, compareTo) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotSameWithoutMessage">assertNotSameWithoutMessage</a> <code>(val, compareTo) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotSameWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotSameWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables do not contain the same object reference else it fails.
 This method asserts the same like @see #assertNotSameWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotSameWithoutMessage">assertNotSameWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotSameWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotSameWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables do not contain the same object reference else it fails.
 This method compares two variables if they do not contain the same object reference.
 It compares the two variables with "!==". @see #assertNotEquals compares
 two variables with "!=" as value match.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEquals">assertNotEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotSameWithMessage">assertNotSameWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrows]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrows</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCall">assertNotThrowsWithCall</a> <code>(call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndType">assertNotThrowsWithCallAndType</a> <code>(type, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndMessage">assertNotThrowsWithCallAndMessage</a> <code>(message:String, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndMessageAndType">assertNotThrowsWithCallAndMessageAndType</a> <code>(message:String, type, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithString">assertNotThrowsWithString</a> <code>(inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithStringAndType">assertNotThrowsWithStringAndType</a> <code>(type, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithStringAndMessage">assertNotThrowsWithStringAndMessage</a> <code>(message:String, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithStringAndMessageAndType">assertNotThrowsWithStringAndMessageAndType</a> <code>(message:String, type, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunction">assertNotThrowsWithFunction</a> <code>(inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndType">assertNotThrowsWithFunctionAndType</a> <code>(type, inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndMessage">assertNotThrowsWithFunctionAndMessage</a> <code>(message:String, inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndMessageAndType">assertNotThrowsWithFunctionAndMessageAndType</a> <code>(message:String, type, inObject, func:Function, args:Array) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithCall]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithCall</b> (

]]></left><right><param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a call doesn't throw any exception.
 This method executes the given Call with arguments and checks if it doesn't throw any exception.
 
 The assertion adds a error to the result if the method did throw any exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[call]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndMessage">assertNotThrowsWithCallAndMessage</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndMessageAndType">assertNotThrowsWithCallAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithCallAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithCallAndMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithCall but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[call   ]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args   ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCall">assertNotThrowsWithCall</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithCallAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithCallAndMessageAndType</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithCallAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type   ]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[call   ]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args   ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndType">assertNotThrowsWithCallAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithCallAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithCallAndType</b> (


]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a call doesn't throw a exception.
 This method executes the given Call with arguments and checks if it doesn't throw a expected exception.
 
 The assertion adds a error to the result if the method did throw the expected exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[call]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithCallAndMessageAndType">assertNotThrowsWithCallAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithFunction]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithFunction</b> (


]]></left><right><param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method doesn't throw any exception.
 This method takes a given method and excutes it within a given object. It checks if it doesn't throw any exception by execution.
 
 The assertion adds a error to the result if the method did throw any exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndMessage">assertNotThrowsWithFunctionAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithFunctionAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithFunctionAndMessage</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithFunction but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunction">assertNotThrowsWithFunction</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithFunctionAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithFunctionAndMessageAndType</b> (




]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithFunctionAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndType">assertNotThrowsWithFunctionAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithFunctionAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithFunctionAndType</b> (



]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method doesn't throw a exception.
 This method takes a given method and excutes it within a given object. It checks if it doesn't throw a expected exception by execution.
 
 The assertion adds a error to the result if the method did throw the expected exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithFunctionAndMessage">assertNotThrowsWithFunctionAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithString]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithString</b> (


]]></left><right><param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method doesn't throw any exception.
 This method takes a method of the given object(inObject) by a given name and checks if it doesn't throw any exception by execution.
 
 The assertion adds a error to the result if the method did throw any exception or if the method was not available.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithStringAndMessage">assertNotThrowsWithStringAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithStringAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithStringAndMessage</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithString but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithString">assertNotThrowsWithString</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithStringAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithStringAndMessageAndType</b> (




]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertNotThrowsWithStringAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithString">assertNotThrowsWithString</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotThrowsWithStringAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotThrowsWithStringAndType</b> (



]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method doesn't throw a exception.
 This method takes a method of the given object(inObject) by a given name and checks if it doesn't throw a expected exception by execution.
 
 The assertion adds a error to the result if the method did throw the expected exception or if the method was not available.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should not be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotThrowsWithStringAndMessageAndType">assertNotThrowsWithStringAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotUndefined]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotUndefined</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotUndefinedWithMessage">assertNotUndefinedWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefinedWithoutMessage">assertNotUndefinedWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotUndefinedWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotUndefinedWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is not undefined else it fails.
 This method asserts the same like @see #assertNotUndefinedWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should not be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefinedWithoutMessage">assertNotUndefinedWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNotUndefinedWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNotUndefinedWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is not undefined else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should not be undefined.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotEmpty">assertNotEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNotUndefinedWithMessage">assertNotUndefinedWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNull]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNull</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNullWithMessage">assertNullWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertNullWithoutMessage">assertNullWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNullWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNullWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is (===) null else it fails.
 This method asserts the same like @see #assertNullWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNullWithoutMessage">assertNullWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertNullWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertNullWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is (===) null else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotNull">assertNotNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNullWithMessage">assertNullWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertSame]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertSame</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertSameWithMessage">assertSameWithMessage</a> <code>(message:String, val, compareTo) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertSameWithoutMessage">assertSameWithoutMessage</a> <code>(val, compareTo) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertSameWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertSameWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables contain the same object reference else it fails.
 This method asserts the same like @see #assertSameWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message  ]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertSameWithoutMessage">assertSameWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertSameWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertSameWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[compareTo]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that two variables contain the same object reference else it fails.
 This method compares two variables if they contain the same object reference.
 It compares the two variables with "===". @see #assertEquals compares
 two variables with "==" as value match.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val      ]]></name><description><![CDATA[Object that should be compared.]]></description></param>
<param><name><![CDATA[compareTo]]></name><description><![CDATA[Object to compare with val.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotSame">assertNotSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEquals">assertEquals</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertSame">assertSame</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertSameWithMessage">assertSameWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrows]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrows</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCall">assertThrowsWithCall</a> <code>(call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndType">assertThrowsWithCallAndType</a> <code>(type, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndMessage">assertThrowsWithCallAndMessage</a> <code>(message:String, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndMessageAndType">assertThrowsWithCallAndMessageAndType</a> <code>(message:String, type, call:{VISDOC_LINK_0}, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithString">assertThrowsWithString</a> <code>(inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndType">assertThrowsWithStringAndType</a> <code>(type, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndMessage">assertThrowsWithStringAndMessage</a> <code>(message:String, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndMessageAndType">assertThrowsWithStringAndMessageAndType</a> <code>(message:String, type, inObject, name:String, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunction">assertThrowsWithFunction</a> <code>(inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndType">assertThrowsWithFunctionAndType</a> <code>(type, inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndMessage">assertThrowsWithFunctionAndMessage</a> <code>(message:String, inObject, func:Function, args:Array) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndMessageAndType">assertThrowsWithFunctionAndMessageAndType</a> <code>(message:String, type, inObject, func:Function, args:Array) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithCall]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithCall</b> (

]]></left><right><param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a call throws any exception.
 This method executes the given Call with arguments and checks if it throws any Exception.
 
 The assertion adds a error to the result if the method didn't throw a exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[call]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndMessage">assertThrowsWithCallAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithCallAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithCallAndMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertThrowsWithCall but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[call   ]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args   ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCall">assertThrowsWithCall</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithCallAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithCallAndMessageAndType</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertThrowsWithCallAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type   ]]></name><description><![CDATA[Type of the Exception that should be thrown.]]></description></param>
<param><name><![CDATA[call   ]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args   ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndType">assertThrowsWithCallAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithCallAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithCallAndType</b> (


]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[call]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a call throws any exception.
 This method executes the given Call with arguments and checks if it throws any Exception.
 
 The assertion adds a error to the result if the method didn't throw a exception or throw a 
 exception with the wrong type.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type]]></name><description><![CDATA[Type of the Exception that should be thrown.]]></description></param>
<param><name><![CDATA[call]]></name><description><![CDATA[Call that should be executed.]]></description></param>
<param><name><![CDATA[args]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithCallAndMessageAndType">assertThrowsWithCallAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithFunction]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithFunction</b> (


]]></left><right><param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method throws any exception.
 This method takes a given method and excutes it within a given object. It checks if it throws any exception by execution.
 
 The assertion adds a error to the result if the method didn't throw any exception.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndMessage">assertThrowsWithFunctionAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithFunctionAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithFunctionAndMessage</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like <a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunction">assertThrowsWithFunction</a> but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[assertThrowsWithFunction]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithFunctionAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithFunctionAndMessageAndType</b> (




]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertThrowsWithFunctionAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndType">assertThrowsWithFunctionAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithFunctionAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithFunctionAndType</b> (



]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[func]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method throws a exception.
 This method takes a given method and excutes it within a given object. It checks if it throws a expected exception by execution.
 
 The assertion adds a error to the result if the method didn't throw a exception or throw a exception with the wrong type.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[func    ]]></name><description><![CDATA[Function that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithFunctionAndMessageAndType">assertThrowsWithFunctionAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithString]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithString</b> (


]]></left><right><param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method throws any exception.
 This method takes a method of the given object(inObject) by a given name and checks if it throws any expected exception by execution.
 
 The assertion adds a error to the result if the method didn't throw a exception or if the method was not available.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndMessage">assertThrowsWithStringAndMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithStringAndMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithStringAndMessage</b> (



]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertThrowsWithString but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithString">assertThrowsWithString</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithStringAndMessageAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithStringAndMessageAndType</b> (




]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts the same like @see #assertThrowsWithStringAndType but adds a message to the failure (if necessary).]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message ]]></name><description><![CDATA[Message that should be used by fail.]]></description></param>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndType">assertThrowsWithStringAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertThrowsWithStringAndType]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertThrowsWithStringAndType</b> (



]]></left><right><param><name><![CDATA[type]]></name></param>,
<param><name><![CDATA[inObject]]></name></param>,
<param><name><![CDATA[name]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the execution of a method throws a exception.
 This method takes a method of the given object(inObject) by a given name and checks if it throws a expected exception by execution.
 
 The assertion adds a error to the result if the method didn't throw a exception or throw a 
 exception with the wrong type or if the method was not available.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[type    ]]></name><description><![CDATA[Type of the Exception that should be thrown.]]></description></param>
<param><name><![CDATA[inObject]]></name><description><![CDATA[Object that should be used as scope.]]></description></param>
<param><name><![CDATA[name    ]]></name><description><![CDATA[Name of the method that should be executed.]]></description></param>
<param><name><![CDATA[args    ]]></name><description><![CDATA[Arguments that should be used by executing.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertThrowsWithStringAndMessageAndType">assertThrowsWithStringAndMessageAndType</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTrue]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTrue</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTrueWithMessage">assertTrueWithMessage</a> <code>(message:String, val:Boolean) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertTrueWithoutMessage">assertTrueWithoutMessage</a> <code>(val:Boolean) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTrueWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTrueWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name>:<type><![CDATA[Boolean]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is true or fails with a message.
 This methods asserts the same like @see #assertTrueWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Boolean that should be "true".]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertFalse">assertFalse</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertTrue">assertTrue</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertTrueWithoutMessage">assertTrueWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTrueWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTrueWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name>:<type><![CDATA[Boolean]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is true.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Boolean that should be "true".]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertFalse">assertFalse</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertTrue">assertTrue</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertTrueWithMessage">assertTrueWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTypeOf]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTypeOf</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTypeOfWithMessage">assertTypeOfWithMessage</a> <code>(message:String, val, type:String) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertTypeOfWithoutMessage">assertTypeOfWithoutMessage</a> <code>(val, type:String) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTypeOfWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTypeOfWithMessage</b> (


]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the type of a value a special type and adds a exception if the assertion fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message to be appended if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Value to be validated.]]></description></param>
<param><name><![CDATA[type   ]]></name><description><![CDATA[Expected type of the value.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTypeOfWithoutMessage">assertTypeOfWithoutMessage</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertTypeOfWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertTypeOfWithoutMessage</b> (

]]></left><right><param><name><![CDATA[val]]></name></param>,
<param><name><![CDATA[type]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts that the type of a value a special type.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val ]]></name><description><![CDATA[Value to be validated.]]></description></param>
<param><name><![CDATA[type]]></name><description><![CDATA[Expected type of the value.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertTypeOfWithMessage">assertTypeOfWithMessage</a><br /><a href="org_as2lib_util_ObjectUtil.html#isTypeOf">org.as2lib.util.ObjectUtil.isTypeOf</a>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertUndefined]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertUndefined</b> (
]]></left><right>) : <![CDATA[Boolean]]></right></fullMethod>
<fields>
<field><title><![CDATA[Overloading]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertUndefinedWithMessage">assertUndefinedWithMessage</a> <code>(message:String, val) : Boolean</code><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefinedWithoutMessage">assertUndefinedWithoutMessage</a> <code>(val) : Boolean</code>]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertUndefinedWithMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertUndefinedWithMessage</b> (

]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is undefined else it fails.
 This method asserts the same like @see #assertUndefinedWithoutMessage
 but it adds a message to the failure.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message that should be provided if the assertion fails.]]></description></param>
<param><name><![CDATA[val    ]]></name><description><![CDATA[Object that should not be null.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefinedWithoutMessage">assertUndefinedWithoutMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[assertUndefinedWithoutMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>assertUndefinedWithoutMessage</b> (
]]></left><right><param><name><![CDATA[val]]></name></param>) : <![CDATA[Boolean]]></right></fullMethod>
<description>
<text><![CDATA[Asserts if a value is (===) undefined else it fails.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[val]]></name><description><![CDATA[Object that should be undefined.]]></description></param>
</field>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestCase.html#assertNotUndefined">assertNotUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertNull">assertNull</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertEmpty">assertEmpty</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefined">assertUndefined</a><br /><a href="org_as2lib_test_unit_TestCase.html#assertUndefinedWithMessage">assertUndefinedWithMessage</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[true if no error occured else false]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[fail]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>fail</b> (
]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[String]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Simply fails the current Testcase.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[Message to the failing of the method.]]></description></param>
</field>
</fields>
</method>
<method>
<title><private><![CDATA[getMethodInformation]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>getMethodInformation</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_test_unit_TestCaseMethodInfo.html">TestCaseMethodInfo</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns the methodinformation for the method that is currently executed.
 The methodinformation represents the information holder for the current
 method that is executed.
 
 Usually only available during the execution of the testcase.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestRunner.html">TestRunner</a><br /><a href="org_as2lib_test_unit_TestCase.html#getTestRunner">getTestRunner</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Methodinformation for the current testcase method.]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getResultFactory]]></title><fullMethod><left><![CDATA[function <b>getResultFactory</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_test_unit_TestResultFactory.html">TestResultFactory</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns a factory to create a Result]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Factory for a result for this test.]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_test_unit_Test.html#getResultFactory">Test.getResultFactory</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getTestRunner]]></title><fullMethod><left><![CDATA[function <b>getTestRunner</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[<a href="org_as2lib_test_unit_TestRunner.html">TestRunner</a>]]></right></fullMethod>
<description>
<text><![CDATA[Getter for the testrunner.
 The testrunner represents the context of the actual method.
 The testrunner is usually only available within a testunit run.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Current testrunner.]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[pause]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>pause</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Pauses the execution of this testcase.
 This method has been introduces to pause the execution of this method.
 The run will not be completed if @see #resume will not get called!]]></text>
</description>
</method>
<method>
<title><private><![CDATA[resume]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>resume</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Resumes the run of this method.
 This method resumes the execution of the testcase.]]></text>
</description>
</method>
<method>
<title><![CDATA[run]]></title><fullMethod><left><![CDATA[function <b>run</b> (
]]></left><right>) : <![CDATA[<a href="org_as2lib_test_unit_TestRunner.html">TestRunner</a>]]></right></fullMethod>
<description>
<text><![CDATA[Runs this testcase.
 Implementation of @see Test. 
 Runs all methods of this testcase in an new container.]]></text>
</description>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_test_unit_TestRunner.html#run">TestRunner.run</a>]]></description></field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[Runner of the Testcases (containing all informations about the run)]]></description></field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_test_unit_Test.html#run">Test.run</a>]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[setTestRunner]]></title><fullMethod><left><![CDATA[function <b>setTestRunner</b> (
]]></left><right><param><name><![CDATA[testRunner]]></name>:<type><![CDATA[<a href="org_as2lib_test_unit_TestRunner.html">TestRunner</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Setter for the testrunner.
 The testrunner represents the context of the actual method.
 <a href="org_as2lib_test_unit_TestCase.html#getMethodInformation">getMethodInformation</a> is a referred to the informations that represent this
 methods information. It will be automatically set by the testrunner, because
 only it know who runs this test)]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[testRunner]]></name><description><![CDATA[Used testrunner for this testcase.]]></description></param>
</field>
</fields>
</method>
<method>
<title><![CDATA[setUp]]></title><fullMethod><left><![CDATA[function <b>setUp</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Template method to set up the testcase before running a method.
 This method will get called before executing each method in a clean,
 new instance.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[startProcess]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>startProcess</b> (


]]></left><right><param><name><![CDATA[process]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Process.html">Process</a>]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>,
<param><name><![CDATA[callBack]]></name>:<type><![CDATA[<a href="org_as2lib_app_exec_Executable.html">Executable</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
</method>
<method>
<title><![CDATA[tearDown]]></title><fullMethod><left><![CDATA[function <b>tearDown</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Template method to tear down the testcase after running a method.
 This method will get called after the execution of each method of this
 testcase.]]></text>
</description>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:30:42]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>