<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[AbstractEventDistributorControl]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[TypeSafeEventListenerSource]]></name><uri><![CDATA[org_as2lib_env_event_TypeSafeEventListenerSource]]></uri></link></item><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.event.distributor.AbstractEventDistributorControl]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Saturday, 28 May 2005, 12:08:06]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>AbstractEventDistributorControl</code> offers default implementations of
 methods needed when implementing the <a href="org_as2lib_env_event_distributor_EventDistributorControl.html">EventDistributorControl</a> interface
 or any sub-interface.]]></summary>
</classDescription>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[AbstractEventDistributorControl]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[d]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[getDistributor]]></item>
<item><private><![CDATA[createDistributor]]></private></item>
<item><private><![CDATA[distribute]]></private></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[TypeSafeEventListenerSource]]></name><uri><![CDATA[org_as2lib_env_event_TypeSafeEventListenerSource]]></uri></link></title><item><link><name>addAllListeners</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>addAllListeners</method></link></item><item><link><name>addListener</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>addListener</method></link></item><item><link><name>getAllListeners</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>getAllListeners</method></link></item><item><link><name>getListenerType</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>getListenerType</method></link></item><item><link><name>isListenerTypeChecked</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>isListenerTypeChecked</method></link></item><item><link><name>removeAllListeners</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>removeAllListeners</method></link></item><item><link><name>removeListener</name><uri>org_as2lib_env_event_TypeSafeEventListenerSource</uri><method>removeListener</method></link></item></fromClass>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[AbstractEventDistributorControl]]></title><fullMethod><left><![CDATA[function <b>AbstractEventDistributorControl</b> (

]]></left><right><param><name><![CDATA[listenerType]]></name>:<type><![CDATA[Function]]></type></param>,
<param><name><![CDATA[checkListenerType]]></name>:<type><![CDATA[Boolean]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>AbstractEventDistributorControl</code> instance.<p><code>checkListenerType</code> is by default set to <code>true</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[listenerType     ]]></name><description><![CDATA[the expected type of listeners]]></description></param>
<param><name><![CDATA[checkListenerType]]></name><description><![CDATA[determines whether to check that passed-in listeners
 are of the expected type]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_except_IllegalArgumentException.html">IllegalArgumentException</a> if the passed-in <code>listenerType</code> is
 <code>null</code> or <code>undefined</code>]]></description></field>
<field><title><![CDATA[Overrides]]></title><description><![CDATA[<a href="org_as2lib_env_event_TypeSafeEventListenerSource.html#TypeSafeEventListenerSource">org.as2lib.env.event.TypeSafeEventListenerSource.TypeSafeEventListenerSource</a>]]></description></field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[d]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>d</b>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The distributor to distribute events.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><private><![CDATA[createDistributor]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>createDistributor</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Creates a new distributor based on the listener type specified on construction.<p>The catching of methods called on the returned distributor takes place using
 <code>__resolve</code>. This method then invokes the <a href="org_as2lib_env_event_distributor_AbstractEventDistributorControl.html#distribute">distribute</a> method with
 the name of the called method and the arguments used for the method call.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the new distributor]]></description></field>
</fields>
</method>
<method>
<title><private><![CDATA[distribute]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[function <b>distribute</b> (

]]></left><right><param><name><![CDATA[eventName]]></name>:<type><![CDATA[String]]></type></param>,
<param><name><![CDATA[args]]></name>:<type><![CDATA[Array]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Executes the event with the given <code>eventName</code> on all added listeners, using
 the arguments after <code>eventName</code> as parameters.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[eventName]]></name><description><![CDATA[the name of the event method to execute on the added listeners]]></description></param>
<param><name><![CDATA[args     ]]></name><description><![CDATA[any number of arguments that are used as parameters on execution of
 the event on the listeners]]></description></param>
</field>
<field><title><![CDATA[Throws]]></title><description><![CDATA[<a href="org_as2lib_env_event_EventExecutionException.html">EventExecutionException</a> if an event method on a listener threw an
 exception]]></description></field>
</fields>
</method>
<method>
<title><![CDATA[getDistributor]]></title><fullMethod><left><![CDATA[function <b>getDistributor</b> (
]]></left><right><param><name><![CDATA[Void]]></name></param>)</right></fullMethod>
<description>
<text><![CDATA[Returns the distributor to distribute the event to all added listeners.<p>The returned distributor can be casted to the type specified on construction.
 You can then invoke the event method on it to distribute it to all added
 listeners. This event distribution approach has the advantage of proper
 compile-time type-checking.<p>The returned distributor throws an <a href="org_as2lib_env_event_EventExecutionException.html">org.as2lib.env.event.EventExecutionException</a> on
 distribution if an event method of a listener threw an exception.<p>This method does always return the same distributor.]]></text>
</description>
<fields>
<field><title><![CDATA[Returns]]></title><description><![CDATA[the distributor to distribute the event]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:26:48]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>