<?xml version="1.0" encoding="utf-8"?>
<document>
<cssFile><![CDATA[css/VisDoc.css]]></cssFile>
<title><![CDATA[Bit101Handler]]></title>
<classDocScript />
<classData>
<inheritsFrom>
<title><![CDATA[Inherits from]]></title><item><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></item>
</inheritsFrom>
<conformsTo>
<title><![CDATA[Implements]]></title><item><link><name><![CDATA[LogHandler]]></name><uri><![CDATA[org_as2lib_env_log_LogHandler]]></uri></link></item>
</conformsTo>
<classDetails>
<item><title><![CDATA[Author]]></title><value><![CDATA[Simon Wacker]]></value></item>
<item><title><![CDATA[Classpath]]></title><value><![CDATA[org.as2lib.env.log.handler.Bit101Handler]]></value></item>
<item><title><![CDATA[File last modified]]></title><value><![CDATA[Sunday, 10 April 2005, 10:34:10]]></value></item>
</classDetails>
<classDescription><summary><![CDATA[<code>Bit101Handler</code> logs messages to the Bit-101 Debug Panel.]]></summary><restOfDescription><![CDATA[<p>The <code>Debug</code> class is needed.]]></restOfDescription>
</classDescription>
<fields>
<field><title><![CDATA[See also]]></title><description><![CDATA[<a href="org_as2lib_env_log_logger_Bit101Logger.html">org.as2lib.env.log.logger.Bit101Logger</a><br /><a href="www.bit-101.com/DebugPanel">Flash Debug Panel Source</a><br /><a href="http://www.bit-101.com/blog/archives/000119.html">Flash Debug Panel Article</a>]]></description></field>
</fields>
</classData>
<pageSummary>
<methodList>
<title><![CDATA[Summary]]></title>
<methodSummaryPart>
<title><![CDATA[Constructor]]></title>
<item><![CDATA[Bit101Handler]]></item>
</methodSummaryPart>
<private>
<methodSummaryPart>
<title><![CDATA[Class properties]]></title>
<item><private><![CDATA[bit101Handler]]></private></item>
</methodSummaryPart>
</private>
<private>
<methodSummaryPart>
<title><![CDATA[Instance properties]]></title>
<item><private><![CDATA[decorateMessage]]></private></item>
<item><private><![CDATA[recursionDepth]]></private></item>
<item><private><![CDATA[indentation]]></private></item>
</methodSummaryPart>
</private>
<methodSummaryPart>
<title><![CDATA[Class methods]]></title>
<item><![CDATA[getInstance]]></item>
</methodSummaryPart>
<methodSummaryPart>
<title><![CDATA[Instance methods]]></title>
<item><![CDATA[write]]></item>
<inheritedMethods>
<fromClass><title><text><![CDATA[Instance methods inherited from]]></text><link><name><![CDATA[BasicClass]]></name><uri><![CDATA[org_as2lib_core_BasicClass]]></uri></link></title><item><link><name>toString</name><uri>org_as2lib_core_BasicClass</uri><method>toString</method></link></item></fromClass>
</inheritedMethods>
</methodSummaryPart>
</methodList>
</pageSummary>
<methodSections>
<methodSection>
<title><![CDATA[Constructor]]></title>
<method>
<title><![CDATA[Bit101Handler]]></title><fullMethod><left><![CDATA[function <b>Bit101Handler</b> (


]]></left><right><param><name><![CDATA[decorateMessage]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[recursionDepth]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[indentation]]></name>:<type><![CDATA[Number]]></type></param>)</right></fullMethod>
<description>
<text><![CDATA[Constructs a new <code>Bit101Handler</code> instance.<p>You can use one and the same instance for multiple loggers. So think about
 using the handler returned by the static <a href="org_as2lib_env_log_handler_Bit101Handler.html#getInstance">getInstance</a> method. Using
 this instance prevents the instantiation of unnecessary bit-101 handlers and
 saves storage.<p><code>decorateMessage</code> is by default <code>true</code>. Refer to the
 <code>Debug</code> class for information on the default <code>recursionDepth</code> and
 <code>indentation</code>.<p>Note that messages are only logged recursively if <code>decorateMessage</code> is
 set to <code>false</code>.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[decorateMessage]]></name><description><![CDATA[(optional) determines whether to log the string returned
 by the <code>LogMessage.toString</code> method or just the message returned by
 <code>LogMessage.getMessage</code>]]></description></param>
<param><name><![CDATA[recursionDepth ]]></name><description><![CDATA[(optional) determines the count of recursions for
 recursively traced objects]]></description></param>
<param><name><![CDATA[indentation    ]]></name><description><![CDATA[(optional) determines the indentation number for recursively
 traced objects]]></description></param>
</field>
</fields>
</method>
</methodSection>
<private>
<methodSection>
<title><![CDATA[Class properties]]></title>
<method>
<title><private><![CDATA[bit101Handler]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[static <b>bit101Handler</b>:<a href="org_as2lib_env_log_handler_Bit101Handler.html">Bit101Handler</a>
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Holds a bit-101 handler.]]></text>
</description>
</method>
</methodSection>
</private>
<private>
<methodSection>
<title><![CDATA[Instance properties]]></title>
<method>
<title><private><![CDATA[decorateMessage]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>decorateMessage</b>:Boolean
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[Determines whether to decorate messages.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[indentation]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>indentation</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The indentation number for recursively traced objects.]]></text>
</description>
</method>
<method>
<title><private><![CDATA[recursionDepth]]></private></title><private><![CDATA[private]]></private><fullMethod><left><![CDATA[<b>recursionDepth</b>:Number
]]></left><right></right></fullMethod>
<description>
<text><![CDATA[The number of recursions when tracing an object recursively.]]></text>
</description>
</method>
</methodSection>
</private>
<methodSection>
<title><![CDATA[Class methods]]></title>
<method>
<title><![CDATA[getInstance]]></title><fullMethod><left><![CDATA[static function <b>getInstance</b> (


]]></left><right><param><name><![CDATA[decorateMessage]]></name>:<type><![CDATA[Boolean]]></type></param>,
<param><name><![CDATA[recursionDepth]]></name>:<type><![CDATA[Number]]></type></param>,
<param><name><![CDATA[indentation]]></name>:<type><![CDATA[Number]]></type></param>) : <![CDATA[<a href="org_as2lib_env_log_handler_Bit101Handler.html">Bit101Handler</a>]]></right></fullMethod>
<description>
<text><![CDATA[Returns an instance of this class.<p>This method always returns the same instance.<p>Note that the arguments are only recognized on first call of this method and
 are in this case used for construction of the <code>Bit101Handler</code> instance.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[decorateMessage]]></name><description><![CDATA[(optional) determines whether to log the string returned
 by the <code>LogMessage.toString</code> method or just the message returned by
 <code>LogMessage.getMessage</code>]]></description></param>
<param><name><![CDATA[recursionDepth ]]></name><description><![CDATA[(optional) determines the count of recursions for
 recursively traced objects]]></description></param>
<param><name><![CDATA[indentation    ]]></name><description><![CDATA[(optional) determines the indentation number for recursively
 traced objects]]></description></param>
</field>
<field><title><![CDATA[Returns]]></title><description><![CDATA[a bit-101 handler]]></description></field>
</fields>
</method>
</methodSection>
<methodSection>
<title><![CDATA[Instance methods]]></title>
<method>
<title><![CDATA[write]]></title><fullMethod><left><![CDATA[function <b>write</b> (
]]></left><right><param><name><![CDATA[message]]></name>:<type><![CDATA[<a href="org_as2lib_env_log_LogMessage.html">LogMessage</a>]]></type></param>) : <![CDATA[Void]]></right></fullMethod>
<description>
<text><![CDATA[Writes log messages to the Bit-101 Debug Panel.<p>Uses the <a href="org_as2lib_env_log_LogMessage.html#toString">org.as2lib.env.log.LogMessage.toString</a> method to obtain the string that is
 logged if <code>decorateMessage</code> is turned on. Otherwise the string returned
 by the original message's <code>toString</code> method is logged if it is of type
 <code>'string'</code>, <code>'number'</code>, <code>'boolean'</code>, <code>'undefined'</code> or
 <code>'null'</code> or the original method is logged recursively if it is not of one
 of the above types.]]></text>
</description>
<fields>
<field><title><![CDATA[Parameters]]></title>
<param><name><![CDATA[message]]></name><description><![CDATA[the message to log]]></description></param>
</field>
<field><title><![CDATA[Specified by]]></title><description><![CDATA[<a href="org_as2lib_env_log_LogHandler.html#write">org.as2lib.env.log.LogHandler.write</a>]]></description></field>
</fields>
</method>
</methodSection>
</methodSections>
<footer><copyright><![CDATA[2005 as2lib]]></copyright>
<date><![CDATA[Tuesday, 31 May 2005, 20:27:14]]>
</date><showTOC>show TOC</showTOC><hideTOC>hide TOC</hideTOC><showPrivate>show private members</showPrivate><hidePrivate>hide private members</hidePrivate>
</footer>
</document>